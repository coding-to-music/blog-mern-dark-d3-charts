{"version":3,"sources":["components/Icons/DeleteIcon.tsx","components/Icons/EditIcon.tsx","components/Modal/Modal.tsx","components/Modal/ModalContainer.tsx","api/index.ts","components/Marker/util/MarkerStatusEnum.ts","util/HelperFunctions.ts","components/Hill/util/hillPlaceholder.ts","pages/Home/Home.tsx","pages/Create/Create.tsx","pages/Edit/Edit.tsx","components/Icons/MoonIcon.tsx","components/Icons/SunIcon.tsx","components/ThemeSwitch/ThemeSwitch.tsx","images/Logo.png","components/Brand/Brand.tsx","components/Navbar/Navbar.tsx","components/Marker/util/MarkerHelper.ts","util/ColourEnum.ts","components/ModalSelector/util/ModalTypeEnum.ts","components/Marker/Marker.tsx","components/Hill/Hill.tsx","components/Icons/AddIcon.tsx","components/MarkerModal/MarkerModal.tsx","components/ModalSelector/ModalSelector.tsx","components/Toolbar/Toolbar.tsx","pages/HillPage/HillPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DeleteIcon","props","className","fill","xmlns","viewBox","d","EditIcon","Modal","classname","ReactDOM","createPortal","role","tabIndex","onClick","event","onClickOutside","onKeyDown","ref","modalRef","text","title","closeRef","closeModal","id","children","onSubmit","submit","document","body","ModalContainer","React","createRef","toggleScrollLock","querySelector","classList","toggle","undefined","trigger","current","focus","onClose","key","target","HTMLElement","contains","this","isShown","Component","MarkerStatus","baseUrl","hillUrl","markerUrl","fetchHills","page","limit","axios","get","fetchHill","deleteHill","delete","createMarker","newMarker","post","deleteMarker","debounceUpdateMarker","callback","wait","timer","args","clearTimeout","Promise","resolve","setTimeout","debounce","updatedMarker","hillPlaceholder","_id","name","description","author","createdAt","updatedAt","Home","state","hills","hill","showModal","nextPage","previousPage","then","filter","setState","selectHill","deselectHill","fetchNextHills","next","res","console","log","data","results","previous","map","index","to","Date","toUTCString","Create","useState","setName","setDescription","setAuthor","redirect","setRedirect","e","newHill","preventDefault","type","required","value","onChange","Edit","setHill","useEffect","updatedHill","MoonIcon","SunIcon","ThemeSwitch","checked","setTheme","themeName","localStorage","setItem","getItem","Brand","src","logo","alt","Navbar","MarkerHelper","getPointAtPercentage","pathNode","percentage","length","getTotalLength","svgPoint","getPointAtLength","x","y","getClosestPoint","point","best","scan","scanDistance","pathLength","precision","bestLength","bestDistance","Infinity","scanLength","distance2","beforeLength","before","after","afterLength","beforeDistance","afterDistance","p","dx","dy","Colour","ModalType","Marker","markerRef","drag","selectedMarker","marker","node","svg","m","d3","line","currentPos","status","Inactive","Complete","Active","updateMarker","click","selectMarker","bind","inactiveIndex","markers","findIndex","completeIndex","position","on","g","attr","append","style","colour","call","isNewPercentage","selectAll","remove","Hill","curve","deselectMarker","path","datum","points","width","size","height","AddIcon","MarkerModal","setPercentage","Gray","setColour","setStatus","hillId","parseInt","toString","update","add","selectModal","None","handleSubmit","buttonRef","Object","keys","color","ModalSelector","modal","Add","addButtonRef","updateButtonRef","Delete","deleteButtonRef","Toolbar","dropdownContentRef","dropdownButtonRef","editButtonRef","activeModal","openEditModal","toggleDropdown","display","hideDropdown","window","addEventListener","removeEventListener","disable","some","empty","disabled","backgroundColor","find","HillPage","isMarkerClick","socket","emit","room","addMarker","newMarkers","splice","io","App","exact","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.deb17813.chunk.js","sourcesContent":["import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst DeleteIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n            <path d=\"M424 64h-88V48c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16H88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zM208 48c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96zM78.364 184a5 5 0 00-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042a5 5 0 00-4.994-5.238zM320 224c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default DeleteIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst EditIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 512 511\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M405.332 256.484c-11.797 0-21.332 9.559-21.332 21.332v170.668c0 11.754-9.559 21.332-21.332 21.332H64c-11.777 0-21.332-9.578-21.332-21.332V149.816c0-11.754 9.555-21.332 21.332-21.332h170.668c11.797 0 21.332-9.558 21.332-21.332 0-11.777-9.535-21.336-21.332-21.336H64c-35.285 0-64 28.715-64 64v298.668c0 35.286 28.715 64 64 64h298.668c35.285 0 64-28.714 64-64V277.816c0-11.796-9.54-21.332-21.336-21.332zm0 0\"/>\r\n            <path d=\"M200.02 237.05a10.793 10.793 0 00-2.922 5.438l-15.082 75.438c-.703 3.496.406 7.101 2.922 9.64a10.673 10.673 0 007.554 3.114c.68 0 1.387-.063 2.09-.211l75.414-15.082c2.09-.43 3.988-1.43 5.461-2.926l168.79-168.79-75.415-75.41zm0 0M496.383 16.102c-20.797-20.801-54.633-20.801-75.414 0l-29.524 29.523 75.414 75.414 29.524-29.527C506.453 81.465 512 68.066 512 53.816s-5.547-27.648-15.617-37.714zm0 0\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default EditIcon;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FocusTrap from 'focus-trap-react';\r\nimport { IModalProps } from './interfaces/IModalProps';\r\nimport \"./style/Modal.css\";\r\n\r\nconst Modal : React.FC<IModalProps> = props => {\r\n    const classname = `modal__button highlight ${props.className}`;\r\n\r\n    return ReactDOM.createPortal(\r\n        <FocusTrap>\r\n            <aside role=\"dialog\"\r\n                   tabIndex={-1}\r\n                   aria-modal=\"true\"\r\n                   className=\"modal\"\r\n                   onClick={event => props.onClickOutside(event)}\r\n                   onKeyDown={event => props.onKeyDown(event)}>\r\n                <div className=\"modal__card\" ref={props.modalRef}>\r\n                    <div className=\"modal__header\"> \r\n                        <h2 className=\"modal__header-title\">{props.text.title}</h2>\r\n                        <button ref={props.closeRef}\r\n                                className=\"modal__header-close\"\r\n                                aria-label=\"Close Modal\"\r\n                                aria-labelledby=\"close-modal\"\r\n                                onClick={() => props.closeModal()}>x</button>\r\n                        <span id=\"close-modal\" className=\"hide-visual\">\r\n                            Close\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"modal__content\">{props.children}</div>\r\n                    <div className=\"modal__footer\">\r\n                        <button className=\"modal__button\" onClick={() => props.closeModal()}>Cancel</button>\r\n                        <button className={classname} \r\n                                onClick={() => {\r\n                                    props.onSubmit()\r\n                                    props.closeModal()\r\n                                }}>{props.text.submit}</button>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        </FocusTrap>,\r\n        document.body\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport { IModalContainerProps } from './interfaces/IModalContainerProps';\r\n\r\nclass ModalContainer extends React.Component<IModalContainerProps> {\r\n    private modalRef = React.createRef<HTMLDivElement>();\r\n    private closeRef = React.createRef<HTMLButtonElement>();\r\n\r\n    toggleScrollLock = () => {\r\n        document.querySelector('html')!.classList.toggle('scroll-lock');\r\n    };\r\n\r\n    closeModal = () => {\r\n        if (this.props.trigger !== undefined) {\r\n            this.props.trigger.current!.focus();\r\n        }\r\n        this.toggleScrollLock();\r\n        this.props.onClose()\r\n    };\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\r\n        if (event.key === \"Escape\") this.closeModal();\r\n    };\r\n    \r\n    onClickOutside = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        if (this.modalRef.current && event.target instanceof HTMLElement && this.modalRef.current.contains(event.target)) return\r\n        this.closeModal();\r\n    };\r\n\r\n    onSubmit = () => {\r\n        this.toggleScrollLock();\r\n        this.props.onSubmit();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isShown) {\r\n            this.closeRef.current!.focus();\r\n            this.toggleScrollLock();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isShown) {\r\n            this.toggleScrollLock();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.isShown ? (\r\n            <Modal onSubmit={this.onSubmit}\r\n                   modalRef={this.modalRef}\r\n                   closeRef={this.closeRef}\r\n                   text={this.props.text}\r\n                   className={this.props.className}\r\n                   closeModal={this.closeModal}\r\n                   onKeyDown={this.onKeyDown}\r\n                   onClickOutside={this.onClickOutside}>\r\n                {this.props.children}\r\n            </Modal>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default ModalContainer;\r\n","import axios from 'axios';\r\nimport { IHill } from '../components/Hill/interfaces/IHill';\r\nimport { INewHill } from '../components/Hill/interfaces/INewHill';\r\nimport { IMarker } from '../components/Marker/interfaces/IMarker';\r\nimport { INewMarker } from '../components/Marker/interfaces/INewMarker';\r\nimport { debounce } from '../util/HelperFunctions';\r\n\r\nconst baseUrl = 'https://pebbletor.herokuapp.com';\r\nconst hillUrl = `${baseUrl}/hills`;\r\nconst markerUrl = `${baseUrl}/markers`;\r\n\r\nexport const fetchHills = (page: number, limit: number) => axios.get(`${hillUrl}?page=${page}&limit=${limit}`);\r\nexport const fetchHill = (id: string) => axios.get(`${hillUrl}/${id}`);\r\nexport const createHill = (newHill: INewHill) => axios.post(hillUrl, newHill);\r\nexport const updateHill = (id: string, updatedHill: IHill) => axios.post(`${hillUrl}/${id}`, updatedHill);\r\nexport const deleteHill = (id: string) => axios.delete(`${hillUrl}/${id}`);\r\n\r\nexport const fetchHillMarkers = (hillId: string) => axios.get(`${markerUrl}/hill/${hillId}`);\r\nexport const fetchMarker = (id: string) => axios.get(`${markerUrl}/${id}`);\r\nexport const createMarker = (newMarker: INewMarker) => axios.post(markerUrl, newMarker);\r\nexport const updateMarker = (id: string, updatedMarker: IMarker) => axios.post(`${markerUrl}/${id}`, updatedMarker);\r\nexport const deleteMarker = (id: string) => axios.delete(`${markerUrl}/${id}`);\r\nexport const debounceUpdateMarker = debounce((id: string, updatedMarker: IMarker) => {\r\n    axios.post(`${markerUrl}/${id}`, updatedMarker);\r\n}, 200);\r\n","export enum MarkerStatus {\r\n    Inactive = \"inactive\",\r\n    Active = \"active\",\r\n    Complete = \"complete\"\r\n}\r\n","export function debounce<T extends unknown[], U>(callback: (...args: T) => PromiseLike<U> | U, wait: number) {\r\n    let timer: NodeJS.Timeout;\r\n  \r\n    return (...args: T): Promise<U> => {\r\n        clearTimeout(timer);\r\n        return new Promise((resolve) => {\r\n            timer = setTimeout(() => resolve(callback(...args)), wait);\r\n        });\r\n    };\r\n}\r\n","import { IHill } from \"../interfaces/IHill\";\r\n\r\nexport const hillPlaceholder: IHill = {\r\n    _id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    author: \"\",\r\n    createdAt: 0,\r\n    updatedAt: 0\r\n}\r\n","import React from \"react\";\r\nimport DeleteIcon from \"../../components/Icons/DeleteIcon\";\r\nimport EditIcon from \"../../components/Icons/EditIcon\";\r\nimport ModalContainer from \"../../components/Modal/ModalContainer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IHomeState } from \"./interfaces/IHomeState\";\r\nimport { IHill } from \"../../components/Hill/interfaces/IHill\";\r\nimport { deleteHill, fetchHills } from \"../../api\";\r\nimport { hillPlaceholder } from \"../../components/Hill/util/hillPlaceholder\";\r\nimport { IPagintation } from \"./interfaces/IPagination\";\r\nimport \"./style/Home.css\";\r\n\r\nclass Home extends React.Component {\r\n    state: IHomeState = {\r\n        hills: [],\r\n        hill: hillPlaceholder,\r\n        showModal: false,\r\n        nextPage: undefined,\r\n        previousPage: undefined\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetchHills(1, 4)\r\n            .then(res => {\r\n                this.setState({ \r\n                    hills: [...this.state.hills, ...res.data.results],\r\n                    nextPage: res.data.next,\r\n                    previousPage: res.data.previous\r\n                })\r\n            });\r\n    }\r\n\r\n    deleteHill = (id: string) => {\r\n        deleteHill(id)\r\n            .then(() => {\r\n                const hills = this.state.hills.filter((hill: IHill) => hill._id !== id);\r\n                this.setState({ hills: hills });\r\n            });\r\n    }\r\n\r\n    selectHill = (hill: IHill) => {\r\n        this.setState({ hill });\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    deselectHill = () => {\r\n        this.setState({ hill: hillPlaceholder });\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    fetchNextHills = (next: IPagintation) => {\r\n        fetchHills(next.page, next.limit)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ \r\n                    hills: [...this.state.hills, ...res.data.results],\r\n                    nextPage: res.data.next,\r\n                    previousPage: res.data.previous\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"home__header\">\r\n                    <h1 className=\"home__title\">Hill charts</h1>\r\n                    {/* <input className=\"home__search\" type=\"text\" name=\"\" id=\"\" placeholder=\"Search\"/> */}\r\n                </div>\r\n\r\n                {this.state.hills.map((hill: IHill, index: number) => (\r\n                    <div key={index} className=\"card hill-card\">\r\n                        <Link to={`/hill/${hill._id}`} className=\"hill-card__link\">\r\n                            <h2>{hill.name}</h2>\r\n                        </Link>\r\n                        <p className=\"hill-card__author\">by {hill.author}</p>\r\n                        <p className=\"hill-card__description\">{hill.description}</p>\r\n                        <div className=\"hill-card__data\">\r\n                            <div className=\"hill-card__dates\">\r\n                                <p className=\"hill-card__date\">Created {new Date(hill.createdAt).toUTCString()}</p>\r\n                                {hill.updatedAt && <p className=\"hill-card__date\">Last updated {new Date(hill.updatedAt).toUTCString()}</p>}\r\n                            </div>\r\n                            <div className=\"hill-card__buttons\">\r\n                                <Link to={`/edit/${hill._id}`} className=\"hill-card__edit\"><EditIcon /></Link>\r\n                                <button onClick={() => this.selectHill(hill)} className=\"hill-card__delete\">\r\n                                    <DeleteIcon />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                { this.state.nextPage ? (\r\n                    <div className=\"home__next\">\r\n                        <button className=\"load-more\"\r\n                                onClick={() => this.fetchNextHills(this.state.nextPage!)}>\r\n                                <p>Load More</p>\r\n                        </button>\r\n                    </div>\r\n                ) : null }\r\n                <ModalContainer onSubmit={() => this.deleteHill(this.state.hill!._id)}\r\n                                onClose={() => this.deselectHill()}\r\n                                isShown={this.state.showModal}\r\n                                text={{title: \"Delete Hill\", submit: \"Delete\"}}\r\n                                className=\"delete\">\r\n                    <p>Are you sure you want to delete <b>{this.state.hill.name}</b>?</p>\r\n                </ModalContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createHill } from \"../../api\";\r\nimport { INewHill } from \"../../components/Hill/interfaces/INewHill\";\r\nimport \"./style/Create.css\";\r\n\r\nconst Create = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const hill: INewHill = { \r\n            name,\r\n            description,\r\n            author\r\n        };\r\n\r\n        createHill(hill)\r\n            .then(() => {\r\n                setRedirect(true);\r\n            });\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h1 className=\"create__title\">Create a hill chart</h1>\r\n            <form onSubmit={handleSubmit} className=\"card form\">\r\n                <label className=\"form__label\">Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart description: </label>\r\n                <textarea className=\"form__input\"\r\n                          required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <span>\r\n                    <button className=\"form__save\" type=\"submit\">Save</button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { fetchHill, updateHill } from \"../../api\";\r\nimport { IHill } from \"../../components/Hill/interfaces/IHill\";\r\nimport { hillPlaceholder } from \"../../components/Hill/util/hillPlaceholder\";\r\nimport { IEditProps } from \"./interfaces/IEditProps\";\r\nimport \"./style/Edit.css\";\r\n\r\nconst Edit = (props: IEditProps) => {\r\n    const [hill, setHill] = useState(hillPlaceholder);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchHill(props.id)\r\n            .then(res => {\r\n                setHill(res.data);\r\n                setName(res.data.name);\r\n                setDescription(res.data.description);\r\n                setAuthor(res.data.author);\r\n            });\r\n    }, [props.id]);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const newHill: IHill = {\r\n            _id: hill._id,\r\n            name,\r\n            description,\r\n            author,\r\n            createdAt: hill.createdAt,\r\n            updatedAt: hill.updatedAt\r\n        };\r\n\r\n        updateHill(props.id, newHill)\r\n            .then(() => {\r\n                setRedirect(true);\r\n            });\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit\">\r\n            <h1 className=\"edit__title\">Edit a hill chart</h1>\r\n            <form onSubmit={handleSubmit} className=\"card form\">\r\n                <label className=\"form__label\">Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart description: </label>\r\n                <textarea className=\"form__input\"\r\n                          required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <span>\r\n                    <button className=\"form__save\" type=\"submit\">Save</button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst MoonIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 512.001 512.001\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M470.218 159.659c-25.647-63.265-74.558-112.8-137.723-139.482C292.332 3.211 248.327-3.24 205.246 1.525c-18.368 2.031-32.9 15.609-36.161 33.787-3.253 18.138 5.634 35.881 22.115 44.151 31.723 15.917 56.581 42.823 69.997 75.762 30.531 74.958-5.539 160.805-80.403 191.367-32.893 13.427-69.478 14.45-103.019 2.88-17.422-6.01-36.334.042-47.056 15.061-10.702 14.991-10.283 34.805 1.04 49.306 26.682 34.168 62.01 61.167 102.167 78.08C165.931 505.399 199.648 512 233.149 512c57.539-.001 114.432-19.478 160.852-57.037 8.587-6.948 9.917-19.542 2.968-28.13-6.948-8.589-19.543-9.916-28.13-2.968-61.963 50.137-146.025 62.086-219.386 31.189-33.879-14.269-63.675-37.034-86.165-65.835-.396-.507-.544-.697-.011-1.443.567-.795.864-.691 1.454-.487 42.714 14.734 89.302 13.434 131.18-3.661 95.269-38.892 141.175-148.121 102.332-243.492-17.073-41.917-48.717-76.162-89.104-96.427-.598-.299-.845-.423-.682-1.335.176-.978.534-1.017 1.184-1.089 36.303-4.014 73.405 1.429 107.287 15.742 53.315 22.52 94.587 64.307 116.216 117.66 21.631 53.358 21.12 112.131-1.438 165.493a220.025 220.025 0 01-3.42 7.677c-4.687 10.004-.378 21.911 9.626 26.599 10.004 4.686 21.911.375 26.598-9.626a262.49 262.49 0 004.042-9.073c26.717-63.2 27.309-132.842 1.666-196.098z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default MoonIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst SunIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 302.4 302.4\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M204.8 97.6C191.2 84 172 75.2 151.2 75.2s-40 8.4-53.6 22.4c-13.6 13.6-22.4 32.8-22.4 53.6s8.8 40 22.4 53.6c13.6 13.6 32.8 22.4 53.6 22.4s40-8.4 53.6-22.4c13.6-13.6 22.4-32.8 22.4-53.6s-8.4-40-22.4-53.6zm-14.4 92.8c-10 10-24 16-39.2 16s-29.2-6-39.2-16-16-24-16-39.2 6-29.2 16-39.2 24-16 39.2-16 29.2 6 39.2 16 16 24 16 39.2-6 29.2-16 39.2zM292 140.8h-30.8c-5.6 0-10.4 4.8-10.4 10.4 0 5.6 4.8 10.4 10.4 10.4H292c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM151.2 250.8c-5.6 0-10.4 4.8-10.4 10.4V292c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4v-30.8c0-5.6-4.8-10.4-10.4-10.4zM258 243.6l-22-22c-3.6-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4zM151.2 0c-5.6 0-10.4 4.8-10.4 10.4v30.8c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4V10.4c0-5.6-4.8-10.4-10.4-10.4zM258.4 44.4c-4-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4 3.6 4 10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM41.2 140.8H10.4c-5.6 0-10.4 4.8-10.4 10.4s4.4 10.4 10.4 10.4h30.8c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM80.4 221.6c-3.6-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4s10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM80.4 66.4l-22-22c-4-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SunIcon;\r\n","import React from 'react';\r\nimport MoonIcon from '../Icons/MoonIcon';\r\nimport SunIcon from '../Icons/SunIcon';\r\nimport { IThemeSwitchState } from './interfaces/IThemeSwitchState';\r\nimport './style/ThemeSwitch.css';\r\n\r\nclass ThemeSwitch extends React.Component {\r\n    state: IThemeSwitchState = { checked: true }\r\n\r\n    componentDidMount() {\r\n        localStorage.getItem('theme') === 'dark-theme' ? this.setTheme('dark-theme') : this.setTheme('light-theme');\r\n    }\r\n\r\n    setTheme = (themeName: string) => {\r\n        themeName === \"light-theme\" ? this.setState({ checked: false }): this.setState({ checked: true });\r\n        localStorage.setItem('theme', themeName);\r\n        document.querySelector('body')!.className = themeName;\r\n    }\r\n\r\n    onClick = () => {\r\n        const updateChecked = !this.state.checked;\r\n        const themeName = updateChecked ? \"dark-theme\" : \"light-theme\";\r\n        this.setTheme(themeName);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.checked) {\r\n            return (\r\n                <div className=\"theme-switch\">\r\n                    <button className=\"theme-switch__button\" onClick={this.onClick} >\r\n                        <SunIcon className=\"theme-switch__icon--sun\" />\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <div className=\"theme-switch\">\r\n                <button className=\"theme-switch__button\" onClick={this.onClick} >\r\n                    <MoonIcon className=\"theme-switch__icon\" />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemeSwitch;\r\n","export default __webpack_public_path__ + \"static/media/Logo.a90d934a.png\";","import logo from \"../../images/Logo.png\";\r\nimport \"./style/Brand.css\";\r\n\r\nconst Brand = () => {\r\n    return (\r\n        <div className=\"brand\">\r\n            <img className=\"brand__logo\" src={logo} alt=\"PebbleTor logo\" />\r\n            <p className=\"brand__text\">PebbleTor</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Brand;\r\n","import ThemeSwitch from \"../ThemeSwitch/ThemeSwitch\";\r\nimport Brand from \"../Brand/Brand\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <Link to=\"/\" className=\"navbar__brand\">\r\n                <Brand />\r\n            </Link>\r\n            <ul className=\"navbar__nav\">\r\n                <li className=\"navbar__item\"><ThemeSwitch /></li>\r\n                <li className=\"navbar__item\">\r\n                    <Link to=\"/\" className=\"navbar__link\">Hill Charts</Link>\r\n                </li>\r\n                <li className=\"navbar__item\">\r\n                    <Link to=\"/create\" className=\"navbar__link create\">Create</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","export class MarkerHelper {\r\n    static getPointAtPercentage = (pathNode: SVGPathElement, percentage: number) => {\r\n        const length = (pathNode.getTotalLength() / 100) * percentage;\r\n        const svgPoint = pathNode.getPointAtLength(length);\r\n        return [svgPoint.x, svgPoint.y];\r\n    }\r\n\r\n    static getClosestPoint = (pathNode: SVGPathElement, point: [number, number]) => {\r\n        let pathLength = pathNode.getTotalLength(), precision = 8, best, bestLength = 0, bestDistance = Infinity;\r\n\r\n        for (let scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\r\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\r\n                best = scan;\r\n                bestLength = scanLength;\r\n                bestDistance = scanDistance;\r\n            }\r\n        }\r\n\r\n        precision /= 2;\r\n        while (precision > 0.5) {\r\n            let before, after, beforeLength, afterLength, beforeDistance, afterDistance;\r\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\r\n                best = before;\r\n                bestLength = beforeLength;\r\n                bestDistance = beforeDistance;\r\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\r\n                best = after;\r\n                bestLength = afterLength;\r\n                bestDistance = afterDistance;\r\n            } else {\r\n                precision /= 2;\r\n            }\r\n        }\r\n\r\n        best = [best?.x, best?.y];\r\n        return best;\r\n\r\n        function distance2(p: { x: number, y: number }) {\r\n            var dx = p.x - point[0],\r\n                dy = p.y - point[1];\r\n            return dx * dx + dy * dy;\r\n        }\r\n    }\r\n}\r\n","export enum Colour {\r\n    Gray = \"gray\",\r\n    Yellow = \"yellow\",\r\n    Orange = \"orange\",\r\n    Maroon = \"maroon\",\r\n    Red = \"red\",\r\n    Purple = \"purple\",\r\n    Fuchsia = \"fuchsia\",\r\n    Pink = \"pink\",\r\n    Green = \"green\",\r\n    Lime = \"lime\",\r\n    Olive = \"olive\",\r\n    Navy = \"navy\",\r\n    Blue = \"blue\",\r\n    Teal = \"teal\",\r\n    Aqua = \"aqua\",\r\n}\r\n","export enum ModalType {\r\n    Add = \"add\",\r\n    Edit = \"edit\",\r\n    Delete = \"delete\",\r\n    None = \"\"\r\n}\r\n","import React from \"react\";\r\nimport { IMarker } from \"./interfaces/IMarker\";\r\nimport { IMarkerProps } from \"./interfaces/IMarkerProps\";\r\nimport { MarkerHelper } from \"./util/MarkerHelper\";\r\nimport { MarkerStatus } from \"./util/MarkerStatusEnum\";\r\nimport * as d3 from \"d3\";\r\nimport \"./style/Marker.css\";\r\n\r\nclass Marker extends React.Component<IMarkerProps> {\r\n    private markerRef = React.createRef<SVGGElement>();\r\n    constructor(props: IMarkerProps) {\r\n        super(props);\r\n        this.drag = this.drag.bind(this);\r\n        this.click = this.click.bind(this);\r\n    }\r\n\r\n    drag = (event: any) => {\r\n        if (this.props.selectedMarker !== undefined && this.props.marker._id === this.props.selectedMarker) {\r\n            const node = this.props.svg;\r\n            const m = d3.pointer(event, node);\r\n            const p = MarkerHelper.getClosestPoint(this.props.line, m);\r\n            let newMarker = {...this.props.marker};\r\n            newMarker.currentPos = p as number[];\r\n            if (p[0] as number < 101) {\r\n                newMarker.status = MarkerStatus.Inactive;\r\n            } else if (p[0] as number > 1099) {\r\n                newMarker.status = MarkerStatus.Complete\r\n            } else {\r\n                newMarker.status = MarkerStatus.Active\r\n            }\r\n            this.props.updateMarker(newMarker);\r\n        }\r\n    }\r\n\r\n    click = () => this.props.selectMarker(this.props.marker._id);\r\n\r\n    componentDidMount() {\r\n        const inactive = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Inactive);\r\n        const inactiveIndex = inactive.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n        const complete = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Complete);\r\n        const completeIndex = complete.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n        let position = this.props.marker.currentPos;\r\n\r\n        if (inactiveIndex > -1) {\r\n            position = [110, 50 + (30 * (inactiveIndex))]\r\n        }\r\n\r\n        if (completeIndex > -1) {\r\n            position = [1000, 50 + (30 * (completeIndex))]\r\n        }\r\n\r\n        if (position.length === 0) {\r\n            position = MarkerHelper.getPointAtPercentage(this.props.line, this.props.marker.percentage);\r\n        }\r\n\r\n        const drag = d3.drag<SVGCircleElement, unknown>().on(\"drag\", this.drag);\r\n        let g = d3.select(this.markerRef.current)\r\n            .attr(\"transform\", \"translate(\" + position + \")\");\r\n\r\n        g.append(\"circle\")\r\n            .attr(\"r\", 10)\r\n            .style(\"fill\", this.props.marker.colour)\r\n            .call(drag);\r\n\r\n        if (inactiveIndex > -1 || completeIndex > -1) {\r\n            g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [20, 5] + \")\")\r\n            .text(this.props.marker.name);\r\n        } else {\r\n            g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [-10, -20] + \")\")\r\n            .text(this.props.marker.name);\r\n        }\r\n\r\n        g.on(\"click\", this.click);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const inactive = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Inactive);\r\n        const inactiveIndex = inactive.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n        const complete = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Complete);\r\n        const completeIndex = complete.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n        let position = this.props.marker.currentPos;\r\n\r\n        if (inactiveIndex > -1) {\r\n            position = [110, 50 + (30 * (inactiveIndex ))]\r\n        }\r\n\r\n        if (completeIndex > -1) {\r\n            position = [1000, 50 + (30 * (completeIndex ))]\r\n        }\r\n\r\n        if (position.length === 0) {\r\n            if (this.props.marker.isNewPercentage) {\r\n                position = MarkerHelper.getPointAtPercentage(this.props.line, this.props.marker.percentage);\r\n            }\r\n        }\r\n\r\n        this.props.marker.currentPos = position;\r\n        this.props.marker.isNewPercentage = false;\r\n\r\n        const drag = d3.drag<SVGCircleElement, unknown>().on(\"drag\", this.drag);\r\n        let g = d3.select(this.markerRef.current)\r\n            .attr(\"transform\", \"translate(\" + position + \")\");\r\n        \r\n        g.selectAll(\"text\").remove();\r\n        g.selectAll(\"circle\").remove();\r\n\r\n        g.append(\"circle\")\r\n            .attr(\"r\", 10)\r\n            .style(\"fill\", this.props.marker.colour)\r\n            .call(drag);\r\n\r\n        if (this.props.marker._id === this.props.selectedMarker) {\r\n            g.append(\"circle\")\r\n                .attr(\"r\", 12)\r\n                .attr(\"class\", \"selected-marker\")\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke-width\", 2);\r\n        }\r\n        \r\n        if (inactiveIndex > -1 || completeIndex > -1) {\r\n            g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [20, 5] + \")\")\r\n            .text(this.props.marker.name);\r\n        } else {\r\n            g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [-10, -20] + \")\")\r\n            .text(this.props.marker.name);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <g ref={this.markerRef}></g>;\r\n    }\r\n}\r\n\r\nexport default Marker;\r\n","import React from \"react\";\r\nimport Marker from \"../Marker/Marker\";\r\nimport { IHillProps } from \"./interfaces/IHillProps\";\r\nimport { IHillState } from \"./interfaces/IHillState\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport * as d3 from \"d3\";\r\nimport \"./style/Hill.css\";\r\n\r\nclass Hill extends React.Component<IHillProps, IHillState> {\r\n    state = {\r\n        svg: null,\r\n        line: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        const line = d3.line().curve(d3.curveCatmullRom);\r\n        const svg: any = d3.select(\"#hill__svg\");\r\n        svg.on(\"click\", this.props.deselectMarker);\r\n        const path = svg\r\n            .append(\"path\")\r\n            .datum(this.props.points)\r\n            .attr(\"d\", line)\r\n            .attr(\"id\", \"hill__path\");\r\n\r\n        svg.append(\"path\")\r\n            .datum([[600, 400],[600, 120]])\r\n            .attr(\"d\", d3.line())\r\n            .attr(\"class\", \"hill__line\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [100, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Inactive\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [990, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Complete\");\r\n        \r\n        this.setState({ svg: svg.node(), line: path.node() });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"hill\">\r\n                <h1 className=\"hill__title\">{this.props.hill.name}</h1>\r\n                <p className=\"hill__subtitle\">{this.props.hill.description}</p>\r\n                <svg id=\"hill__svg\"\r\n                    width={this.props.size.width}\r\n                    height={this.props.size.height}>\r\n                    {this.props.markers.map((marker: IMarker) => (\r\n                        <Marker svg={this.state.svg}\r\n                                line={this.state.line}\r\n                                marker={marker}\r\n                                markers={this.props.markers}\r\n                                selectedMarker={this.props.selectedMarker}\r\n                                selectMarker={this.props.selectMarker}\r\n                                updateMarker={this.props.updateMarker}\r\n                                key={marker._id} />\r\n                    ))}\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hill;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst AddIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M14.25 0H2.75C1.23 0 0 1.23 0 2.75v15.5C0 19.77 1.23 21 2.75 21h6.59a8.731 8.731 0 01-.84-3.75c0-1.15.22-2.25.63-3.26-.04.01-.08.01-.13.01H4c-.55 0-1-.45-1-1s.45-1 1-1h5c.38 0 .72.22.88.54A8.827 8.827 0 0112.36 10H4c-.55 0-1-.45-1-1s.45-1 1-1h9c.55 0 1 .45 1 1 0 .05 0 .09-.01.13.93-.38 1.95-.6 3.01-.62V2.75C17 1.23 15.77 0 14.25 0zM8 6H4c-.55 0-1-.45-1-1s.45-1 1-1h4c.55 0 1 .45 1 1s-.45 1-1 1z\"/>\r\n            <path d=\"M17.25 10.5c-3.722 0-6.75 3.028-6.75 6.75S13.528 24 17.25 24 24 20.972 24 17.25s-3.028-6.75-6.75-6.75zM20 18.25h-1.75V20a1 1 0 01-2 0v-1.75H14.5a1 1 0 010-2h1.75V14.5a1 1 0 012 0v1.75H20a1 1 0 010 2z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default AddIcon;\r\n","import ModalContainer from \"../Modal/ModalContainer\";\r\nimport { useState } from \"react\";\r\nimport { Colour } from \"../../util/ColourEnum\";\r\nimport { MarkerStatus } from \"../Marker/util/MarkerStatusEnum\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { INewMarker } from \"../Marker/interfaces/INewMarker\";\r\nimport { IMarkerModalProps } from \"./interfaces/IMarkerModalProps\";\r\nimport { ModalType } from \"../ModalSelector/util/ModalTypeEnum\";\r\nimport \"./style/MarkerModal.css\";\r\n\r\nconst MarkerModal = (props: IMarkerModalProps) => {\r\n    const [name, setName] = useState(props.marker?.name || \"\");\r\n    const [percentage, setPercentage] = useState(props.marker?.percentage || \"50\");\r\n    const [colour, setColour] = useState(props.marker?.colour || Colour.Gray);\r\n    const [status, setStatus] = useState(props.marker?.status || MarkerStatus.Active);\r\n\r\n    const handleSubmit = () => {\r\n        const newMarker: INewMarker = {\r\n            hillId: props.hillId,\r\n            name,\r\n            percentage: parseInt(percentage.toString()),\r\n            isNewPercentage: percentage !== props.marker?.percentage || \r\n            ((props.marker.status === MarkerStatus.Complete || props.marker.status === MarkerStatus.Inactive) && status === MarkerStatus.Active),\r\n            currentPos: props.marker?.currentPos || [],\r\n            colour,\r\n            status,\r\n        }\r\n\r\n        if (props.marker !== undefined) {\r\n            const marker:IMarker = { \r\n                ...newMarker,\r\n                _id: props.marker._id,\r\n                createdAt: props.marker.createdAt,\r\n                updatedAt: props.marker.updatedAt\r\n            };\r\n            props.update(marker);\r\n        } else props.add(newMarker);\r\n\r\n        props.selectModal(ModalType.None);\r\n    }\r\n    \r\n    return (\r\n        <ModalContainer onSubmit={() => handleSubmit()}\r\n                        onClose={() => props.selectModal(ModalType.None)}\r\n                        isShown={true}\r\n                        trigger={props.buttonRef}\r\n                        text={{title: props.title, submit: \"Save\"}}>\r\n            <div className=\"marker-modal__content\">\r\n                <label className=\"marker-modal__label\">Marker name: </label>\r\n                <input type=\"text\"\r\n                        className=\"marker-modal__input\"\r\n                        required \r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"marker-modal__label\">Marker percentage: </label>\r\n                <input type=\"text\"\r\n                        className=\"marker-modal__input\"\r\n                        required\r\n                        value={percentage}\r\n                        onChange={(e) => setPercentage(e.target.value)} />\r\n                <label className=\"marker-modal__label\">Marker colour: </label>\r\n                <select className=\"marker-modal__input\"\r\n                        required\r\n                        value={colour}\r\n                        onChange={(e) => setColour(e.target.value)}>\r\n                        {(Object.keys(Colour) as Array<keyof typeof Colour>).map((key) => {\r\n                            return <option value={Colour[key]} style={{color: Colour[key]}}>{key}</option>;\r\n                        })}\r\n                </select>\r\n                <label className=\"marker-modal__label\">Marker status: </label>\r\n                <select className=\"marker-modal__input\"\r\n                        required\r\n                        value={status}\r\n                        onChange={(e) => setStatus(e.target.value)}>\r\n                        {(Object.keys(MarkerStatus) as Array<keyof typeof MarkerStatus>).map((key) => {\r\n                            return <option value={MarkerStatus[key]}>{key}</option>;\r\n                        })}\r\n                </select>\r\n            </div>\r\n        </ModalContainer>\r\n    );\r\n}\r\n\r\nexport default MarkerModal;\r\n","import React from \"react\";\r\nimport MarkerModal from \"../MarkerModal/MarkerModal\";\r\nimport ModalContainer from \"../Modal/ModalContainer\";\r\nimport { IModalSelectorProps } from \"./interfaces/IModalSelectorProps\";\r\nimport { ModalType } from \"./util/ModalTypeEnum\";\r\nimport \"./style/ModalSelector.css\";\r\n\r\nconst ModalSelector : React.FC<IModalSelectorProps> = props => {\r\n    switch(props.modal) {\r\n        case ModalType.Add:\r\n            return (\r\n                <MarkerModal title=\"Add Marker\" \r\n                             hillId={props.hillId}\r\n                             buttonRef={props.addButtonRef}\r\n                             add={props.add} \r\n                             update={props.update}\r\n                             selectModal={props.selectModal} />\r\n            );\r\n        case ModalType.Edit:\r\n            return (\r\n                <MarkerModal title=\"Edit Marker\"\r\n                             hillId={props.hillId}\r\n                             buttonRef={props.updateButtonRef}\r\n                             add={props.add}\r\n                             update={props.update} \r\n                             marker={props.marker}\r\n                             selectModal={props.selectModal} />\r\n            );\r\n        case ModalType.Delete:\r\n            return (\r\n                <ModalContainer onSubmit={() => props.delete(props.marker!._id)}\r\n                                onClose={() => props.selectModal(ModalType.None)}\r\n                                isShown={true}\r\n                                trigger={props.deleteButtonRef}\r\n                                text={{title: \"Delete Marker\", submit: \"Delete\"}}\r\n                                className=\"delete\">\r\n                    <p>Are you sure you want to delete <b>{props.marker!.name}</b>?</p>\r\n                </ModalContainer>\r\n            );\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport default ModalSelector;\r\n","import React from \"react\";\r\nimport AddIcon from \"../Icons/AddIcon\";\r\nimport DeleteIcon from \"../Icons/DeleteIcon\";\r\nimport EditIcon from \"../Icons/EditIcon\";\r\nimport ModalSelector from \"../ModalSelector/ModalSelector\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { IToolbarProps } from \"./interfaces/IToolbarProps\";\r\nimport { IToolbarStatus } from \"./interfaces/IToolbarStatus\";\r\nimport { ModalType } from \"../ModalSelector/util/ModalTypeEnum\";\r\nimport \"./style/Toolbar.css\";\r\n\r\nclass Toolbar extends React.Component<IToolbarProps, IToolbarStatus> {\r\n    private dropdownContentRef = React.createRef<HTMLDivElement>();\r\n    private dropdownButtonRef = React.createRef<HTMLButtonElement>();\r\n    private addButtonRef = React.createRef<HTMLButtonElement>();\r\n    private editButtonRef = React.createRef<HTMLButtonElement>();\r\n    private deleteButtonRef = React.createRef<HTMLButtonElement>();\r\n\r\n    state = { activeModal: ModalType.None }\r\n    \r\n    selectModal = (modal: string) => this.setState({activeModal: modal});\r\n\r\n    openEditModal = (id: string) => {\r\n        this.toggleDropdown();\r\n        this.props.selectMarker(id);\r\n        this.selectModal(ModalType.Edit);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"mousedown\",  this.hideDropdown);\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        const state = this.dropdownContentRef.current?.style.display;\r\n        if (state === \"none\") {\r\n            this.dropdownContentRef.current!.style.display = \"flex\";\r\n        } else {\r\n            this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    hideDropdown = (event: MouseEvent) => {\r\n        if (!this.dropdownContentRef.current?.contains(event.target as HTMLDivElement) && \r\n        !this.dropdownContentRef.current?.contains(event.target as HTMLButtonElement)) {\r\n                this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"mousedown\", this.hideDropdown);\r\n    }\r\n    \r\n    render() {\r\n        const disable = !this.props.markers.some(marker => this.props.selectedMarker !== undefined && marker._id === this.props.selectedMarker);\r\n        const empty = this.props.markers.length === 0;\r\n        const style = disable && !empty ? \"dropdown__button disabled\" : \"dropdown__button\" ;\r\n        return (\r\n            <>\r\n                <div className=\"toolbar\">\r\n                    <button className=\"toolbar__button\"\r\n                            ref={this.addButtonRef}\r\n                            onClick={() => this.selectModal(ModalType.Add)}><AddIcon className=\"toolbar__icon\" /> Add</button>\r\n                    <div className=\"toolbar__edit\">\r\n                        <button className=\"toolbar__edit-button\"\r\n                                ref={this.editButtonRef}\r\n                                disabled={disable} \r\n                                onClick={() => this.selectModal(ModalType.Edit)}>\r\n                            <EditIcon className=\"toolbar__icon\" /><span>Edit</span>\r\n                        </button>\r\n                        <div className=\"dropdown\">\r\n                            <button className={style} \r\n                                    disabled={empty}\r\n                                    ref={this.dropdownButtonRef}\r\n                                    onClick={() => this.toggleDropdown()}>▼</button>\r\n                            <div className=\"dropdown__content\"\r\n                                style={{display: \"none\"}}\r\n                                ref={this.dropdownContentRef}>\r\n                                {this.props.markers.map((marker: IMarker, index) => (\r\n                                    <button className=\"dropdown__item\"\r\n                                            onClick={() => this.openEditModal(marker._id)}\r\n                                            key={index}>\r\n                                        <div style={{backgroundColor: marker.colour}} className=\"dropdown__marker\"></div>{marker.name}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"toolbar__button delete\"\r\n                            ref={this.deleteButtonRef}\r\n                            disabled={disable}\r\n                            onClick={() => this.selectModal(ModalType.Delete)}>\r\n                        <DeleteIcon className=\"toolbar__icon\" /><span>Delete</span>\r\n                    </button>\r\n                </div>\r\n                <ModalSelector modal={this.state.activeModal}\r\n                               hillId={this.props.hillId}\r\n                               add={this.props.add}\r\n                               addButtonRef={this.addButtonRef}\r\n                               update={this.props.update}\r\n                               updateButtonRef={this.editButtonRef}\r\n                               delete={this.props.delete}\r\n                               deleteButtonRef={this.deleteButtonRef}\r\n                               marker={this.props.markers.find((m: IMarker) => m._id === this.props.selectedMarker)}\r\n                               selectModal={this.selectModal} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport Hill from \"../../components/Hill/Hill\";\r\nimport Toolbar from \"../../components/Toolbar/Toolbar\";\r\nimport { IMarker } from \"../../components/Marker/interfaces/IMarker\";\r\nimport { INewMarker } from \"../../components/Marker/interfaces/INewMarker\";\r\nimport { IHillPageProps } from \"./interfaces/IHillPageProps\"\r\nimport { IHillPageState } from \"./interfaces/IHillPageState\";\r\nimport { hillPlaceholder } from \"../../components/Hill/util/hillPlaceholder\";\r\nimport { createMarker, debounceUpdateMarker, deleteMarker, fetchHill, fetchHillMarkers } from \"../../api\";\r\nimport \"./style/HillPage.css\";\r\n\r\nclass HillPage extends React.Component<IHillPageProps, IHillPageState> {\r\n    state = {\r\n        hill: hillPlaceholder,\r\n        markers: [],\r\n        selectedMarker: \"\",\r\n        isMarkerClick: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.socket.emit(\"hill-connect\", this.props.id);\r\n        this.props.socket.on(\"update-hill-markers\", data => this.setState({ markers: data}));\r\n        fetchHill(this.props.id).then(res => this.setState({ hill: res.data }));\r\n        fetchHillMarkers(this.props.id).then(res => this.setState({ markers: res.data }));\r\n    };\r\n\r\n    update = () => this.props.socket.emit(\"update-hill-markers\", ({room: this.props.id, markers: this.state.markers}));\r\n\r\n    selectMarker = (id: string) => this.setState({isMarkerClick: true, selectedMarker: id});\r\n\r\n    deselectMarker = () => {\r\n        if (!this.state.isMarkerClick) this.setState({selectedMarker: \"\"});\r\n        this.setState({isMarkerClick: false});\r\n    }\r\n\r\n    addMarker = (marker: INewMarker) => {\r\n        createMarker(marker)\r\n            .then((res) => {\r\n                this.setState({markers: [...this.state.markers, res.data]}, () => {\r\n                    this.update();\r\n                });\r\n            });\r\n    }\r\n\r\n    updateMarker = (marker: IMarker) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === marker._id);\r\n        newMarkers[index] = marker;\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            debounceUpdateMarker(marker._id, marker)\r\n        });\r\n    }\r\n        \r\n    deleteMarker = (id: string) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === id);\r\n        newMarkers.splice(index, 1);\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            deleteMarker(id);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Hill hill={this.state.hill}\r\n                      markers={this.state.markers}\r\n                      selectedMarker={this.state.selectedMarker}\r\n                      updateMarker={this.updateMarker}\r\n                      selectMarker={this.selectMarker}\r\n                      deselectMarker={this.deselectMarker}\r\n                      size={{width: 1200, height: 450}} \r\n                      points={[[100,400],[300,350],[600,120],[900,350],[1100,400]]} />\r\n                <Toolbar markers={this.state.markers} \r\n                         selectedMarker={this.state.selectedMarker}\r\n                         hillId={this.props.id}\r\n                         selectMarker={this.selectMarker}\r\n                         add={this.addMarker}\r\n                         update={this.updateMarker}\r\n                         delete={this.deleteMarker} />\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default HillPage;\r\n","import Home from \"./pages/Home/Home\";\r\nimport Create from \"./pages/Create/Create\";\r\nimport Edit from \"./pages/Edit/Edit\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport HillPage from \"./pages/HillPage/HillPage\";\r\n// import Footer from './components/Footer/Footer';\r\nimport { io } from 'socket.io-client';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nconst socket = io(\"/\");\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Navbar />\r\n                <Switch>\r\n                    <div className=\"container\">\r\n                        <Route exact path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        <Route path=\"/edit/:id\" render={props => (\r\n                            <Edit id={props.match.params.id}/>\r\n                        )} />\r\n                        <Route path=\"/create\">\r\n                            <Create />\r\n                        </Route>\r\n                        <Route path=\"/hill/:id\" render={props => (\r\n                            <HillPage id={props.match.params.id} socket={socket} />\r\n                        )} />\r\n                    </div>\r\n                </Switch>\r\n                {/* <Footer /> */}\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}