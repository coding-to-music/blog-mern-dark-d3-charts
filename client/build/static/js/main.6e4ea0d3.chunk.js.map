{"version":3,"sources":["components/Icons/DeleteIcon.tsx","components/Icons/EditIcon.tsx","components/Modal/Modal.tsx","components/Modal/ModalContainer.tsx","api/index.ts","components/Marker/util/MarkerStatusEnum.ts","util/HelperFunctions.ts","components/Hill/util/hillPlaceholder.ts","pages/Home/Home.tsx","pages/Create/Create.tsx","pages/Edit/Edit.tsx","components/Icons/MoonIcon.tsx","components/Icons/SunIcon.tsx","components/ThemeSwitch/ThemeSwitch.tsx","images/Logo.png","components/Brand/Brand.tsx","components/Navbar/Navbar.tsx","components/Marker/util/MarkerHelper.ts","components/Marker/Marker.tsx","components/Hill/Hill.tsx","components/Notice/util/NoticeTypeEnum.ts","util/ColourEnum.ts","components/ModalSelector/util/ModalTypeEnum.ts","components/Icons/AddIcon.tsx","components/Icons/ImageIcon.tsx","components/Icons/UploadIcon.tsx","util/ValidImageTypes.ts","components/ImageUpload/ImageUpload.tsx","components/Notice/Notice.tsx","components/MarkerModal/MarkerModal.tsx","components/ModalSelector/ModalSelector.tsx","components/Toolbar/Toolbar.tsx","pages/HillPage/HillPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DeleteIcon","props","className","fill","xmlns","viewBox","d","EditIcon","Modal","classname","ReactDOM","createPortal","role","tabIndex","onMouseDown","event","onClickOutside","onKeyDown","ref","modalRef","text","title","closeRef","onClick","closeModal","id","children","onSubmit","manualClose","submit","document","body","ModalContainer","React","createRef","toggleScrollLock","querySelector","classList","toggle","undefined","trigger","current","focus","onClose","key","target","HTMLElement","SVGElement","contains","this","isShown","Component","MarkerStatus","baseUrl","hillUrl","markerUrl","fetchHills","page","limit","axios","get","fetchHill","deleteHill","delete","createMarker","newMarker","post","updateMarker","updatedMarker","isNewImage","deleteMarker","debounceUpdateMarker","callback","wait","timer","args","clearTimeout","Promise","resolve","setTimeout","debounce","hillPlaceholder","_id","name","description","author","createdAt","updatedAt","Home","state","hills","hill","showModal","nextPage","previousPage","then","filter","setState","selectHill","deselectHill","fetchNextHills","next","res","console","log","data","results","previous","map","index","to","Date","toUTCString","Create","useState","setName","setDescription","setAuthor","redirect","setRedirect","e","newHill","preventDefault","type","required","value","onChange","Edit","setHill","useEffect","updatedHill","MoonIcon","SunIcon","ThemeSwitch","checked","setTheme","themeName","localStorage","setItem","getItem","Brand","src","logo","alt","Navbar","MarkerHelper","getPointAtPercentage","pathNode","percentage","length","getTotalLength","svgPoint","getPointAtLength","x","y","getClosestPoint","point","best","scan","scanDistance","pathLength","precision","bestLength","bestDistance","Infinity","scanLength","distance2","beforeLength","before","after","afterLength","beforeDistance","afterDistance","p","dx","dy","getStatusIndex","inactive","markers","m","status","Inactive","findIndex","marker","complete","Complete","getPosition","position","isNewPercentage","line","stackMarker","stackedMarkers","onDrag","selectedMarker","node","svg","d3","Active","onTouch","setupMarker","g","drag","touch","on","attr","imagePath","d3Drag","touchable","append","call","style","colour","Marker","markerRef","click","selectMarker","select","selectAll","remove","Hill","NoticeType","Colour","ModalType","setSvg","setLine","curve","deselectMarker","path","datum","points","width","size","height","AddIcon","ImageIcon","cx","cy","r","UploadIcon","validImageTypes","ImageUpload","inputRef","imageURI","hasImage","fileName","slice","createImage","removeImage","setIsNewImage","readURI","reader","FileReader","onload","result","replace","readAsDataURL","files","handleChange","fileType","includes","handleKeyUp","imgTag","htmlFor","onKeyUp","Notice","useRef","add","MarkerModal","setPercentage","Gray","setColour","setStatus","image","setImage","None","notice","setNotice","validateInput","trim","Error","selectModal","formData","FormData","hillId","toString","update","handleSubmit","buttonRef","file","Resizer","imageFileResizer","uri","Object","keys","color","ModalSelector","modal","Add","addButtonRef","updateButtonRef","Delete","deleteButtonRef","Toolbar","dropdownContentRef","dropdownButtonRef","editButtonRef","activeModal","openEditModal","toggleDropdown","display","hideDropdown","window","addEventListener","removeEventListener","disable","some","empty","disabled","backgroundColor","find","HillPage","isMarkerClick","socket","emit","room","addMarker","updateMarkerWithForm","newMarkers","splice","io","App","exact","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e4ea0d3.chunk.js","sourcesContent":["import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst DeleteIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n            <path d=\"M424 64h-88V48c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16H88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zM208 48c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96zM78.364 184a5 5 0 00-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042a5 5 0 00-4.994-5.238zM320 224c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default DeleteIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst EditIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 512 511\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M405.332 256.484c-11.797 0-21.332 9.559-21.332 21.332v170.668c0 11.754-9.559 21.332-21.332 21.332H64c-11.777 0-21.332-9.578-21.332-21.332V149.816c0-11.754 9.555-21.332 21.332-21.332h170.668c11.797 0 21.332-9.558 21.332-21.332 0-11.777-9.535-21.336-21.332-21.336H64c-35.285 0-64 28.715-64 64v298.668c0 35.286 28.715 64 64 64h298.668c35.285 0 64-28.714 64-64V277.816c0-11.796-9.54-21.332-21.336-21.332zm0 0\"/>\r\n            <path d=\"M200.02 237.05a10.793 10.793 0 00-2.922 5.438l-15.082 75.438c-.703 3.496.406 7.101 2.922 9.64a10.673 10.673 0 007.554 3.114c.68 0 1.387-.063 2.09-.211l75.414-15.082c2.09-.43 3.988-1.43 5.461-2.926l168.79-168.79-75.415-75.41zm0 0M496.383 16.102c-20.797-20.801-54.633-20.801-75.414 0l-29.524 29.523 75.414 75.414 29.524-29.527C506.453 81.465 512 68.066 512 53.816s-5.547-27.648-15.617-37.714zm0 0\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default EditIcon;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FocusTrap from 'focus-trap-react';\r\nimport { IModalProps } from './interfaces/IModalProps';\r\nimport \"./style/Modal.css\";\r\n\r\nconst Modal : React.FC<IModalProps> = props => {\r\n    const classname = `modal__button highlight ${props.className}`;\r\n\r\n    return ReactDOM.createPortal(\r\n        <FocusTrap>\r\n            <aside role=\"dialog\"\r\n                   tabIndex={-1}\r\n                   aria-modal=\"true\"\r\n                   className=\"modal\"\r\n                   onMouseDown={event => props.onClickOutside(event)}\r\n                   onKeyDown={event => props.onKeyDown(event)}>\r\n                <div className=\"modal__card\" ref={props.modalRef}>\r\n                    <div className=\"modal__header\"> \r\n                        <h2 className=\"modal__header-title\">{props.text.title}</h2>\r\n                        <button ref={props.closeRef}\r\n                                className=\"modal__header-close\"\r\n                                aria-label=\"Close Modal\"\r\n                                aria-labelledby=\"close-modal\"\r\n                                onClick={() => props.closeModal()}>×</button>\r\n                        <span id=\"close-modal\" className=\"hide-visual\">\r\n                            Close\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"modal__content\">{props.children}</div>\r\n                    <div className=\"modal__footer\">\r\n                        <button className=\"modal__button\" onClick={() => props.closeModal()}>Cancel</button>\r\n                        <button className={classname} \r\n                                onClick={() => {\r\n                                    props.onSubmit()\r\n                                    if (!props.manualClose) {\r\n                                        props.closeModal()\r\n                                    }\r\n                                }}>{props.text.submit}</button>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        </FocusTrap>,\r\n        document.body\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport { IModalContainerProps } from './interfaces/IModalContainerProps';\r\n\r\nclass ModalContainer extends React.Component<IModalContainerProps> {\r\n    private modalRef = React.createRef<HTMLDivElement>();\r\n    private closeRef = React.createRef<HTMLButtonElement>();\r\n\r\n    toggleScrollLock = () => {\r\n        document.querySelector('html')!.classList.toggle('scroll-lock');\r\n    };\r\n\r\n    closeModal = () => {\r\n        if (this.props.trigger !== undefined) {\r\n            this.props.trigger.current!.focus();\r\n        }\r\n        this.toggleScrollLock();\r\n        this.props.onClose()\r\n    };\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\r\n        if (event.key === \"Escape\") this.closeModal();\r\n    };\r\n    \r\n    onClickOutside = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        if (this.modalRef.current && \r\n            (event.target instanceof HTMLElement || event.target instanceof SVGElement) &&\r\n            this.modalRef.current.contains(event.target)) {\r\n            return\r\n        }\r\n        this.closeModal();\r\n    };\r\n\r\n    onSubmit = () => {\r\n        this.toggleScrollLock();\r\n        this.props.onSubmit();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isShown) {\r\n            this.closeRef.current!.focus();\r\n            this.toggleScrollLock();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isShown) {\r\n            this.toggleScrollLock();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.isShown ? (\r\n            <Modal onSubmit={this.onSubmit}\r\n                   modalRef={this.modalRef}\r\n                   closeRef={this.closeRef}\r\n                   text={this.props.text}\r\n                   className={this.props.className}\r\n                   manualClose={this.props.manualClose}\r\n                   closeModal={this.closeModal}\r\n                   onKeyDown={this.onKeyDown}\r\n                   onClickOutside={this.onClickOutside}>\r\n                {this.props.children}\r\n            </Modal>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default ModalContainer;\r\n","import axios from 'axios';\r\nimport { IHill } from '../components/Hill/interfaces/IHill';\r\nimport { INewHill } from '../components/Hill/interfaces/INewHill';\r\nimport { IMarker } from '../components/Marker/interfaces/IMarker';\r\nimport { debounce } from '../util/HelperFunctions';\r\n\r\nexport const baseUrl = 'https://pebbletor.herokuapp.com';\r\nconst hillUrl = `${baseUrl}/hills`;\r\nconst markerUrl = `${baseUrl}/markers`;\r\n\r\nexport const fetchHills = (page: number, limit: number) => axios.get(`${hillUrl}?page=${page}&limit=${limit}`);\r\nexport const fetchHill = (id: string) => axios.get(`${hillUrl}/${id}`);\r\nexport const createHill = (newHill: INewHill) => axios.post(hillUrl, newHill);\r\nexport const updateHill = (id: string, updatedHill: IHill) => axios.post(`${hillUrl}/${id}`, updatedHill);\r\nexport const deleteHill = (id: string) => axios.delete(`${hillUrl}/${id}`);\r\n\r\nexport const fetchHillMarkers = (hillId: string) => axios.get(`${markerUrl}/hill/${hillId}`);\r\nexport const fetchMarker = (id: string) => axios.get(`${markerUrl}/${id}`);\r\nexport const createMarker = (newMarker: FormData) => axios.post(markerUrl, newMarker);\r\nexport const updateMarker = (id: string, updatedMarker: FormData, isNewImage: boolean) => axios.post(`${markerUrl}/${id}?isnewimage=${isNewImage}`, updatedMarker);\r\nexport const deleteMarker = (id: string) => axios.delete(`${markerUrl}/${id}`);\r\nexport const debounceUpdateMarker = debounce((id: string, updatedMarker: IMarker) => {\r\n    axios.post(`${markerUrl}/${id}`, updatedMarker);\r\n}, 200);\r\n","export enum MarkerStatus {\r\n    Inactive = \"inactive\",\r\n    Active = \"active\",\r\n    Complete = \"complete\"\r\n}\r\n","export function debounce<T extends unknown[], U>(callback: (...args: T) => PromiseLike<U> | U, wait: number) {\r\n    let timer: NodeJS.Timeout;\r\n  \r\n    return (...args: T): Promise<U> => {\r\n        clearTimeout(timer);\r\n        return new Promise((resolve) => {\r\n            timer = setTimeout(() => resolve(callback(...args)), wait);\r\n        });\r\n    };\r\n}\r\n","import { IHill } from \"../interfaces/IHill\";\r\n\r\nexport const hillPlaceholder: IHill = {\r\n    _id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    author: \"\",\r\n    createdAt: 0,\r\n    updatedAt: 0\r\n}\r\n","import React from \"react\";\r\nimport DeleteIcon from \"../../components/Icons/DeleteIcon\";\r\nimport EditIcon from \"../../components/Icons/EditIcon\";\r\nimport ModalContainer from \"../../components/Modal/ModalContainer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IHomeState } from \"./interfaces/IHomeState\";\r\nimport { IHill } from \"../../components/Hill/interfaces/IHill\";\r\nimport { deleteHill, fetchHills } from \"../../api\";\r\nimport { hillPlaceholder } from \"../../components/Hill/util/hillPlaceholder\";\r\nimport { IPagintation } from \"./interfaces/IPagination\";\r\nimport \"./style/Home.css\";\r\n\r\nclass Home extends React.Component {\r\n    state: IHomeState = {\r\n        hills: [],\r\n        hill: hillPlaceholder,\r\n        showModal: false,\r\n        nextPage: undefined,\r\n        previousPage: undefined\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetchHills(1, 4)\r\n            .then(res => {\r\n                this.setState({ \r\n                    hills: [...this.state.hills, ...res.data.results],\r\n                    nextPage: res.data.next,\r\n                    previousPage: res.data.previous\r\n                })\r\n            });\r\n    }\r\n\r\n    deleteHill = (id: string) => {\r\n        deleteHill(id)\r\n            .then(() => {\r\n                const hills = this.state.hills.filter((hill: IHill) => hill._id !== id);\r\n                this.setState({ hills: hills });\r\n            });\r\n    }\r\n\r\n    selectHill = (hill: IHill) => {\r\n        this.setState({ hill });\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    deselectHill = () => {\r\n        this.setState({ hill: hillPlaceholder });\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    fetchNextHills = (next: IPagintation) => {\r\n        fetchHills(next.page, next.limit)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({ \r\n                    hills: [...this.state.hills, ...res.data.results],\r\n                    nextPage: res.data.next,\r\n                    previousPage: res.data.previous\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"home__header\">\r\n                    <h1 className=\"home__title\">Hill charts</h1>\r\n                    {/* <input className=\"home__search\" type=\"text\" name=\"\" id=\"\" placeholder=\"Search\"/> */}\r\n                </div>\r\n\r\n                {this.state.hills.map((hill: IHill, index: number) => (\r\n                    <div key={index} className=\"card hill-card\">\r\n                        <Link to={`/hill/${hill._id}`} className=\"hill-card__link\">\r\n                            <h2>{hill.name}</h2>\r\n                        </Link>\r\n                        <p className=\"hill-card__author\">by {hill.author}</p>\r\n                        <p className=\"hill-card__description\">{hill.description}</p>\r\n                        <div className=\"hill-card__data\">\r\n                            <div className=\"hill-card__dates\">\r\n                                <p className=\"hill-card__date\">Created {new Date(hill.createdAt).toUTCString()}</p>\r\n                                {hill.updatedAt && <p className=\"hill-card__date\">Last updated {new Date(hill.updatedAt).toUTCString()}</p>}\r\n                            </div>\r\n                            <div className=\"hill-card__buttons\">\r\n                                <Link to={`/edit/${hill._id}`} className=\"hill-card__edit\"><EditIcon /></Link>\r\n                                <button onClick={() => this.selectHill(hill)} className=\"hill-card__delete\">\r\n                                    <DeleteIcon />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                { this.state.nextPage ? (\r\n                    <div className=\"home__next\">\r\n                        <button className=\"load-more\"\r\n                                onClick={() => this.fetchNextHills(this.state.nextPage!)}>\r\n                                <p>Load More</p>\r\n                        </button>\r\n                    </div>\r\n                ) : null }\r\n                <ModalContainer onSubmit={() => this.deleteHill(this.state.hill!._id)}\r\n                                onClose={() => this.deselectHill()}\r\n                                manualClose={false}\r\n                                isShown={this.state.showModal}\r\n                                text={{title: \"Delete Hill\", submit: \"Delete\"}}\r\n                                className=\"delete\">\r\n                    <p>Are you sure you want to delete <b>{this.state.hill.name}</b>?</p>\r\n                </ModalContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createHill } from \"../../api\";\r\nimport { INewHill } from \"../../components/Hill/interfaces/INewHill\";\r\nimport \"./style/Create.css\";\r\n\r\nconst Create = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const hill: INewHill = { \r\n            name,\r\n            description,\r\n            author\r\n        };\r\n\r\n        createHill(hill)\r\n            .then(() => {\r\n                setRedirect(true);\r\n            });\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h1 className=\"create__title\">Create a hill chart</h1>\r\n            <form onSubmit={handleSubmit} className=\"card form\">\r\n                <label className=\"form__label\">Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart description: </label>\r\n                <textarea className=\"form__input\"\r\n                          required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <span>\r\n                    <button className=\"form__save\" type=\"submit\">Save</button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { fetchHill, updateHill } from \"../../api\";\r\nimport { IHill } from \"../../components/Hill/interfaces/IHill\";\r\nimport { hillPlaceholder } from \"../../components/Hill/util/hillPlaceholder\";\r\nimport { IEditProps } from \"./interfaces/IEditProps\";\r\nimport \"./style/Edit.css\";\r\n\r\nconst Edit = (props: IEditProps) => {\r\n    const [hill, setHill] = useState(hillPlaceholder);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchHill(props.id)\r\n            .then(res => {\r\n                setHill(res.data);\r\n                setName(res.data.name);\r\n                setDescription(res.data.description);\r\n                setAuthor(res.data.author);\r\n            });\r\n    }, [props.id]);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const newHill: IHill = {\r\n            _id: hill._id,\r\n            name,\r\n            description,\r\n            author,\r\n            createdAt: hill.createdAt,\r\n            updatedAt: hill.updatedAt\r\n        };\r\n\r\n        updateHill(props.id, newHill)\r\n            .then(() => {\r\n                setRedirect(true);\r\n            });\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit\">\r\n            <h1 className=\"edit__title\">Edit a hill chart</h1>\r\n            <form onSubmit={handleSubmit} className=\"card form\">\r\n                <label className=\"form__label\">Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart description: </label>\r\n                <textarea className=\"form__input\"\r\n                          required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label className=\"form__label\">Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       className=\"form__input\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <span>\r\n                    <button className=\"form__save\" type=\"submit\">Save</button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst MoonIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 512.001 512.001\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M470.218 159.659c-25.647-63.265-74.558-112.8-137.723-139.482C292.332 3.211 248.327-3.24 205.246 1.525c-18.368 2.031-32.9 15.609-36.161 33.787-3.253 18.138 5.634 35.881 22.115 44.151 31.723 15.917 56.581 42.823 69.997 75.762 30.531 74.958-5.539 160.805-80.403 191.367-32.893 13.427-69.478 14.45-103.019 2.88-17.422-6.01-36.334.042-47.056 15.061-10.702 14.991-10.283 34.805 1.04 49.306 26.682 34.168 62.01 61.167 102.167 78.08C165.931 505.399 199.648 512 233.149 512c57.539-.001 114.432-19.478 160.852-57.037 8.587-6.948 9.917-19.542 2.968-28.13-6.948-8.589-19.543-9.916-28.13-2.968-61.963 50.137-146.025 62.086-219.386 31.189-33.879-14.269-63.675-37.034-86.165-65.835-.396-.507-.544-.697-.011-1.443.567-.795.864-.691 1.454-.487 42.714 14.734 89.302 13.434 131.18-3.661 95.269-38.892 141.175-148.121 102.332-243.492-17.073-41.917-48.717-76.162-89.104-96.427-.598-.299-.845-.423-.682-1.335.176-.978.534-1.017 1.184-1.089 36.303-4.014 73.405 1.429 107.287 15.742 53.315 22.52 94.587 64.307 116.216 117.66 21.631 53.358 21.12 112.131-1.438 165.493a220.025 220.025 0 01-3.42 7.677c-4.687 10.004-.378 21.911 9.626 26.599 10.004 4.686 21.911.375 26.598-9.626a262.49 262.49 0 004.042-9.073c26.717-63.2 27.309-132.842 1.666-196.098z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default MoonIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst SunIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 302.4 302.4\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M204.8 97.6C191.2 84 172 75.2 151.2 75.2s-40 8.4-53.6 22.4c-13.6 13.6-22.4 32.8-22.4 53.6s8.8 40 22.4 53.6c13.6 13.6 32.8 22.4 53.6 22.4s40-8.4 53.6-22.4c13.6-13.6 22.4-32.8 22.4-53.6s-8.4-40-22.4-53.6zm-14.4 92.8c-10 10-24 16-39.2 16s-29.2-6-39.2-16-16-24-16-39.2 6-29.2 16-39.2 24-16 39.2-16 29.2 6 39.2 16 16 24 16 39.2-6 29.2-16 39.2zM292 140.8h-30.8c-5.6 0-10.4 4.8-10.4 10.4 0 5.6 4.8 10.4 10.4 10.4H292c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM151.2 250.8c-5.6 0-10.4 4.8-10.4 10.4V292c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4v-30.8c0-5.6-4.8-10.4-10.4-10.4zM258 243.6l-22-22c-3.6-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4zM151.2 0c-5.6 0-10.4 4.8-10.4 10.4v30.8c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4V10.4c0-5.6-4.8-10.4-10.4-10.4zM258.4 44.4c-4-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4 3.6 4 10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM41.2 140.8H10.4c-5.6 0-10.4 4.8-10.4 10.4s4.4 10.4 10.4 10.4h30.8c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM80.4 221.6c-3.6-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4s10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM80.4 66.4l-22-22c-4-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SunIcon;\r\n","import React from 'react';\r\nimport MoonIcon from '../Icons/MoonIcon';\r\nimport SunIcon from '../Icons/SunIcon';\r\nimport { IThemeSwitchState } from './interfaces/IThemeSwitchState';\r\nimport './style/ThemeSwitch.css';\r\n\r\nclass ThemeSwitch extends React.Component {\r\n    state: IThemeSwitchState = { checked: true }\r\n\r\n    componentDidMount() {\r\n        localStorage.getItem('theme') === 'dark-theme' ? this.setTheme('dark-theme') : this.setTheme('light-theme');\r\n    }\r\n\r\n    setTheme = (themeName: string) => {\r\n        themeName === \"light-theme\" ? this.setState({ checked: false }): this.setState({ checked: true });\r\n        localStorage.setItem('theme', themeName);\r\n        document.querySelector('body')!.className = themeName;\r\n    }\r\n\r\n    onClick = () => {\r\n        const updateChecked = !this.state.checked;\r\n        const themeName = updateChecked ? \"dark-theme\" : \"light-theme\";\r\n        this.setTheme(themeName);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.checked) {\r\n            return (\r\n                <div className=\"theme-switch\">\r\n                    <button className=\"theme-switch__button\" onClick={this.onClick} >\r\n                        <SunIcon className=\"theme-switch__icon--sun\" />\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <div className=\"theme-switch\">\r\n                <button className=\"theme-switch__button\" onClick={this.onClick} >\r\n                    <MoonIcon className=\"theme-switch__icon\" />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemeSwitch;\r\n","export default __webpack_public_path__ + \"static/media/Logo.a90d934a.png\";","import logo from \"../../images/Logo.png\";\r\nimport \"./style/Brand.css\";\r\n\r\nconst Brand = () => {\r\n    return (\r\n        <div className=\"brand\">\r\n            <img className=\"brand__logo\" src={logo} alt=\"PebbleTor logo\" />\r\n            <p className=\"brand__text\">PebbleTor</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Brand;\r\n","import ThemeSwitch from \"../ThemeSwitch/ThemeSwitch\";\r\nimport Brand from \"../Brand/Brand\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <Link to=\"/\" className=\"navbar__brand\">\r\n                <Brand />\r\n            </Link>\r\n            <ul className=\"navbar__nav\">\r\n                <li className=\"navbar__item\"><ThemeSwitch /></li>\r\n                <li className=\"navbar__item\">\r\n                    <Link to=\"/\" className=\"navbar__link\">Hill Charts</Link>\r\n                </li>\r\n                <li className=\"navbar__item\">\r\n                    <Link to=\"/create\" className=\"navbar__link create\">Create</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import { ICoord } from \"../../../util/ICoord\";\r\nimport { IMarker } from \"../interfaces/IMarker\";\r\nimport { IMarkerProps } from \"../interfaces/IMarkerProps\";\r\nimport { IMarkerStatusIndex } from \"../interfaces/IMarkerStatusIndex\";\r\nimport { MarkerStatus } from \"./MarkerStatusEnum\";\r\nimport { baseUrl } from \"../../../api\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport class MarkerHelper {\r\n    static getPointAtPercentage = (pathNode: SVGPathElement, percentage: number) => {\r\n        const length = (pathNode.getTotalLength() / 100) * percentage;\r\n        const svgPoint = pathNode.getPointAtLength(length);\r\n        return {x: svgPoint.x, y: svgPoint.y};\r\n    }\r\n\r\n    static getClosestPoint = (pathNode: SVGPathElement, point: [number, number]) => {\r\n        let pathLength = pathNode.getTotalLength(), precision = 8, best, bestLength = 0, bestDistance = Infinity;\r\n\r\n        for (let scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\r\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\r\n                best = scan;\r\n                bestLength = scanLength;\r\n                bestDistance = scanDistance;\r\n            }\r\n        }\r\n\r\n        precision /= 2;\r\n        while (precision > 0.5) {\r\n            let before, after, beforeLength, afterLength, beforeDistance, afterDistance;\r\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\r\n                best = before;\r\n                bestLength = beforeLength;\r\n                bestDistance = beforeDistance;\r\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\r\n                best = after;\r\n                bestLength = afterLength;\r\n                bestDistance = afterDistance;\r\n            } else {\r\n                precision /= 2;\r\n            }\r\n        }\r\n        if (best !== undefined ) {\r\n            best = {x: best.x, y: best.y};\r\n        }\r\n        \r\n        return best;\r\n\r\n        function distance2(p: { x: number, y: number }) {\r\n            var dx = p.x - point[0],\r\n                dy = p.y - point[1];\r\n            return dx * dx + dy * dy;\r\n        }\r\n    }\r\n\r\n    static getStatusIndex = (props: IMarkerProps) => {\r\n        const inactive = props.markers.filter((m: IMarker) => m.status === MarkerStatus.Inactive);\r\n        const inactiveIndex = inactive.findIndex((m: IMarker) => m._id === props.marker._id);\r\n        const complete = props.markers.filter((m: IMarker) => m.status === MarkerStatus.Complete);\r\n        const completeIndex = complete.findIndex((m: IMarker) => m._id === props.marker._id);\r\n\r\n        const index: IMarkerStatusIndex = {\r\n            inactive: inactiveIndex,\r\n            complete: completeIndex\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    static getPosition = (props: IMarkerProps, index: IMarkerStatusIndex) => {\r\n        let position: ICoord = {x: props.marker.x, y: props.marker.y};\r\n\r\n        if (props.marker.isNewPercentage) {\r\n            position = MarkerHelper.getPointAtPercentage(props.line, props.marker.percentage);\r\n        }\r\n        if (index.inactive > -1) {\r\n            position = {x: 110, y: 50 + (30 * (index.inactive))};\r\n        } else if (index.complete > -1) {\r\n            position = {x: 1000, y: 50 + (30 * (index.complete))};\r\n        }\r\n\r\n        return position;\r\n    }\r\n\r\n    static stackMarker = (marker: IMarker, markers: IMarker[]) => {\r\n        const newMarker = marker;\r\n        const stackedRange = 30;\r\n        const stackedMarkers = markers.filter(m => m.x >= newMarker.x - stackedRange && m.x <= newMarker.x + stackedRange && m._id !== newMarker._id);\r\n        if (stackedMarkers.length > 0) {\r\n            let y = 0;\r\n            for (let m of stackedMarkers) {\r\n                if (m.y > y) {\r\n                    y = y + 50;\r\n                }\r\n            }\r\n            newMarker.y = newMarker.y - y;\r\n        }\r\n\r\n        return newMarker;\r\n    }\r\n\r\n    static onDrag = (props: IMarkerProps, event: any) => {\r\n        if (props.selectedMarker !== undefined && props.marker._id === props.selectedMarker) {\r\n            const node = props.svg;\r\n            const m = d3.pointer(event, node);\r\n  \r\n            const p = MarkerHelper.getClosestPoint(props.line, m);\r\n            let newMarker = {...props.marker};\r\n            newMarker.x = p!.x;\r\n            newMarker.y = p!.y;\r\n            if (p!.x < 101) {\r\n                newMarker.status = MarkerStatus.Inactive;\r\n            } else if (p!.x > 1099) {\r\n                newMarker.status = MarkerStatus.Complete\r\n            } else {\r\n                newMarker.status = MarkerStatus.Active\r\n            }\r\n\r\n            newMarker = MarkerHelper.stackMarker(newMarker, props.markers);\r\n\r\n            props.updateMarker(newMarker);\r\n        }\r\n    }\r\n\r\n    static onTouch = (props: IMarkerProps, event: any) => {\r\n        if (props.selectedMarker !== undefined && props.marker._id === props.selectedMarker) {\r\n            const node = props.svg;\r\n            const m = d3.pointers(event, node)[0];\r\n  \r\n            const p = MarkerHelper.getClosestPoint(props.line, m);\r\n            let newMarker = {...props.marker};\r\n            newMarker.x = p!.x;\r\n            newMarker.y = p!.y;\r\n            if (p!.x < 101) {\r\n                newMarker.status = MarkerStatus.Inactive;\r\n            } else if (p!.x > 1099) {\r\n                newMarker.status = MarkerStatus.Complete\r\n            } else {\r\n                newMarker.status = MarkerStatus.Active\r\n            }\r\n\r\n            newMarker = MarkerHelper.stackMarker(newMarker, props.markers);\r\n            \r\n            props.updateMarker(newMarker);\r\n        }\r\n    }\r\n\r\n    static setupMarker = (\r\n            props: IMarkerProps,\r\n            g: d3.Selection<SVGGElement | null, unknown, null, undefined>,\r\n            index: IMarkerStatusIndex,\r\n            position: ICoord,\r\n            drag: (event: any) => void,\r\n            touch: (event: any) => void\r\n        ) => {\r\n        \r\n        g.on(\"touchmove\", touch);\r\n\r\n        g.attr(\"transform\", `translate(${[position.x, position.y]})`);\r\n        \r\n        if (props.marker.imagePath !== undefined) {\r\n            const d3Drag = d3.drag<SVGImageElement, unknown>().on(\"drag\", drag).touchable(false);\r\n            g.append(\"image\")\r\n                .attr('width', 26)\r\n                .attr('height', 26)\r\n                .attr(\"class\", \"image-marker\")\r\n                .attr(\"transform\", \"translate(\" + [-13, -13] + \")\")\r\n                .attr(\"xlink:href\", `${baseUrl}/${props.marker.imagePath}`)\r\n                .attr('preserveAspectRatio', \"none\")\r\n                .attr(\"clip-path\", \"url(#avatar-clip)\")\r\n                .call(d3Drag);\r\n        } else {\r\n            const d3Drag = d3.drag<SVGCircleElement, unknown>().on(\"drag\", drag).touchable(false);\r\n            g.append(\"circle\")\r\n                .attr(\"r\", 12)\r\n                .style(\"fill\", props.marker.colour)\r\n                .call(d3Drag);\r\n        }\r\n\r\n        if (props.marker._id === props.selectedMarker) {\r\n            g.append(\"circle\")\r\n                .attr(\"r\", 14)\r\n                .attr(\"class\", \"selected-marker\")\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke-width\", 2);\r\n        }\r\n        \r\n        if (index.inactive > -1 || index.complete > -1) {\r\n            g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [20, 5] + \")\")\r\n            .text(props.marker.name);\r\n        } else {\r\n            g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [-13, -20] + \")\")\r\n            .text(props.marker.name);\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { IMarkerProps } from \"./interfaces/IMarkerProps\";\r\nimport { MarkerHelper } from \"./util/MarkerHelper\";\r\nimport { select } from \"d3\";\r\nimport \"./style/Marker.css\";\r\n\r\nclass Marker extends React.Component<IMarkerProps> {\r\n    private markerRef = React.createRef<SVGGElement>();\r\n\r\n    drag = (event: any) => MarkerHelper.onDrag(this.props, event);\r\n\r\n    touch = (event: any) => MarkerHelper.onTouch(this.props, event);\r\n\r\n    click = () => this.props.selectMarker(this.props.marker._id);\r\n\r\n    componentDidMount() {\r\n        const index = MarkerHelper.getStatusIndex(this.props);\r\n        const position = MarkerHelper.getPosition(this.props, index);\r\n        let g = select(this.markerRef.current);\r\n\r\n        g.on(\"click\", this.click);\r\n\r\n        MarkerHelper.setupMarker(this.props, g, index, position, this.drag, this.touch);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const index = MarkerHelper.getStatusIndex(this.props);\r\n        const position = MarkerHelper.getPosition(this.props, index);\r\n        let g = select(this.markerRef.current);\r\n\r\n        this.props.marker.x = position.x;\r\n        this.props.marker.y = position.y;\r\n        this.props.marker.isNewPercentage = false;\r\n\r\n        g.selectAll(\"image\").remove();\r\n        g.selectAll(\"text\").remove();\r\n        g.selectAll(\"circle\").remove();\r\n\r\n        MarkerHelper.setupMarker(this.props, g, index, position, this.drag, this.touch);\r\n    }\r\n\r\n    render() { return <g ref={this.markerRef} />; }\r\n}\r\n\r\nexport default Marker;\r\n","import Marker from \"../Marker/Marker\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IHillProps } from \"./interfaces/IHillProps\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport * as d3 from \"d3\";\r\nimport \"./style/Hill.css\";\r\n\r\nfunction Hill(props: IHillProps){\r\n    const [svg, setSvg] = useState(null);\r\n    const [line, setLine] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const line = d3.line().curve(d3.curveCatmullRom);\r\n        const svg: any = d3.select(\"#hill__svg\");\r\n        svg.on(\"click\", props.deselectMarker);\r\n        \r\n        const defs = svg.append(\"defs\");\r\n        defs.append(\"clipPath\")\r\n            .attr(\"id\", \"avatar-clip\")\r\n            .append(\"circle\")\r\n            .attr(\"cx\", 13)\r\n            .attr(\"cy\", 13)\r\n            .attr(\"r\", 12)\r\n\r\n        const path = svg\r\n            .append(\"path\")\r\n            .datum(props.points)\r\n            .attr(\"d\", line)\r\n            .attr(\"id\", \"hill__path\");\r\n\r\n        svg.append(\"path\")\r\n            .datum([[600, 400],[600, 120]])\r\n            .attr(\"d\", d3.line())\r\n            .attr(\"class\", \"hill__line\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [100, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Inactive\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [990, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Complete\");\r\n        \r\n        setSvg(svg.node());\r\n        setLine(path.node());\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"hill\">\r\n            <h1 className=\"hill__title\">{props.hill.name}</h1>\r\n            <p className=\"hill__subtitle\">{props.hill.description}</p>\r\n            <svg id=\"hill__svg\"\r\n                width={props.size.width}\r\n                height={props.size.height}>\r\n                {props.markers.map((marker: IMarker) => (\r\n                    <Marker svg={svg}\r\n                            line={line}\r\n                            marker={marker}\r\n                            markers={props.markers}\r\n                            selectedMarker={props.selectedMarker}\r\n                            selectMarker={props.selectMarker}\r\n                            updateMarker={props.updateMarker}\r\n                            key={marker._id} />\r\n                ))}\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hill;\r\n","export enum NoticeType {\r\n    Information = \"information\",\r\n    Success = \"success\",\r\n    Warning = \"warning\",\r\n    Error = \"error\",\r\n    None = \"\"\r\n}\r\n","export enum Colour {\r\n    Gray = \"gray\",\r\n    Yellow = \"yellow\",\r\n    Orange = \"orange\",\r\n    Maroon = \"maroon\",\r\n    Red = \"red\",\r\n    Purple = \"purple\",\r\n    Fuchsia = \"fuchsia\",\r\n    Pink = \"pink\",\r\n    Green = \"green\",\r\n    Lime = \"lime\",\r\n    Olive = \"olive\",\r\n    Navy = \"navy\",\r\n    Blue = \"blue\",\r\n    Teal = \"teal\",\r\n    Aqua = \"aqua\",\r\n}\r\n","export enum ModalType {\r\n    Add = \"add\",\r\n    Edit = \"edit\",\r\n    Delete = \"delete\",\r\n    None = \"\"\r\n}\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst AddIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M14.25 0H2.75C1.23 0 0 1.23 0 2.75v15.5C0 19.77 1.23 21 2.75 21h6.59a8.731 8.731 0 01-.84-3.75c0-1.15.22-2.25.63-3.26-.04.01-.08.01-.13.01H4c-.55 0-1-.45-1-1s.45-1 1-1h5c.38 0 .72.22.88.54A8.827 8.827 0 0112.36 10H4c-.55 0-1-.45-1-1s.45-1 1-1h9c.55 0 1 .45 1 1 0 .05 0 .09-.01.13.93-.38 1.95-.6 3.01-.62V2.75C17 1.23 15.77 0 14.25 0zM8 6H4c-.55 0-1-.45-1-1s.45-1 1-1h4c.55 0 1 .45 1 1s-.45 1-1 1z\"/>\r\n            <path d=\"M17.25 10.5c-3.722 0-6.75 3.028-6.75 6.75S13.528 24 17.25 24 24 20.972 24 17.25s-3.028-6.75-6.75-6.75zM20 18.25h-1.75V20a1 1 0 01-2 0v-1.75H14.5a1 1 0 010-2h1.75V14.5a1 1 0 012 0v1.75H20a1 1 0 010 2z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default AddIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst ImageIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 48\">\r\n            <path d=\"M56 0H8a8 8 0 0 0-8 8v32a7.27 7.27 0 0 0 .48 2.64A8.05 8.05 0 0 0 4 46.91 8.1 8.1 0 0 0 8 48h48a8.08 8.08 0 0 0 6.72-3.65A8.18 8.18 0 0 0 64 40V8a8 8 0 0 0-8-8ZM33 42.67H8a2.35 2.35 0 0 1-.83-.16l14.48-19.76 11.87 11.86 3.76 3.76 4.27 4.3ZM58.67 40A2.68 2.68 0 0 1 56 42.67h-6.88l-8-8.06 6.82-6.74 10.78 12Zm0-8.13L50 22.21a2.72 2.72 0 0 0-1.89-.88 2.53 2.53 0 0 0-1.95.78l-8.82 8.74-14.11-14.08a2.84 2.84 0 0 0-2.11-.77 2.76 2.76 0 0 0-1.95 1.09L5.33 36V8A2.68 2.68 0 0 1 8 5.33h48A2.68 2.68 0 0 1 58.67 8Z\" />\r\n            <circle cx=\"37.33\" cy=\"18.67\" r=\"5.33\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default ImageIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst UploadIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 96 96\">\r\n            <path d=\"M90 54a5.997 5.997 0 0 0-6 6v18H12V60a6 6 0 0 0-12 0v24a5.997 5.997 0 0 0 6 6h84a5.997 5.997 0 0 0 6-6V60a5.997 5.997 0 0 0-6-6Z\"/>\r\n            <path d=\"M34.242 34.242 42 26.484V60a6 6 0 0 0 12 0V26.484l7.758 7.758a6 6 0 0 0 8.484-8.484l-18-18a5.998 5.998 0 0 0-8.484 0l-18 18a6 6 0 0 0 8.484 8.484Z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default UploadIcon;\r\n","export const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n","import React from \"react\";\r\nimport ImageIcon from \"../Icons/ImageIcon\";\r\nimport UploadIcon from \"../Icons/UploadIcon\";\r\nimport { baseUrl } from \"../../api\";\r\nimport { validImageTypes } from \"../../util/ValidImageTypes\";\r\nimport { IImageUploadProps } from \"./interfaces/IImageUploadProps\";\r\nimport { IImageUploadState } from \"./interfaces/IImageUploadState\";\r\nimport \"./style/ImageUpload.css\";\r\n\r\nclass ImageUpload extends React.Component<IImageUploadProps, IImageUploadState> {\r\n    private inputRef = React.createRef<HTMLInputElement>()\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        imageURI: \"\",\r\n        hasImage: this.props.imagePath && !this.props.isNewImage ? true : false,\r\n        fileName: this.props.imagePath ? this.props.imagePath.slice(8) : \"\"\r\n    }\r\n\r\n    createImage = () => {\r\n        if(this.state.hasImage) {\r\n            if (this.state.imageURI !== \"\") {\r\n                return <img className=\"image-upload__image\" src={this.state.imageURI} alt={this.props.alt}/>\r\n            } else if (this.props.imagePath !== undefined) {\r\n                return <img className=\"image-upload__image\" src={`${baseUrl}/${this.props.imagePath}`} alt={this.props.alt}/>\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    removeImage = () => {\r\n        this.inputRef.current!.value = \"\";\r\n        this.setState({imageURI: \"\", hasImage: false, fileName: \"\"});\r\n        if (this.props.onChange !== undefined) {\r\n            this.props.onChange(null);\r\n            this.props.setIsNewImage(true);\r\n        }\r\n    }\r\n\r\n    readURI = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let reader = new FileReader();\r\n        reader.onload = (e: ProgressEvent<FileReader>) =>{\r\n            this.setState({imageURI:e.target!.result, hasImage: true, fileName: event.target.value.replace(/.*[/\\\\]/, '')});\r\n        }\r\n        reader.readAsDataURL(event.target.files![0]);\r\n    }\r\n\r\n    handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.files && event.target.files[0]){\r\n            const fileType = event.target.files[0].type;\r\n            if (validImageTypes.includes(fileType)) {\r\n                this.readURI(event);\r\n                if (this.props.onChange !== undefined) {\r\n                    this.props.onChange(event.target.files[0]);\r\n                    this.props.setIsNewImage(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleKeyUp = (event: React.KeyboardEvent<HTMLLabelElement>) => {\r\n        event.preventDefault();\r\n        if (event.key === \"Enter\") {\r\n            this.inputRef.current!.click();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const imgTag = this.createImage();\r\n\r\n        return (\r\n            <div className=\"image-upload\">\r\n                <div className=\"image-upload__preview\">\r\n                    <ImageIcon className=\"image-upload__placeholder\" />\r\n                    {imgTag}\r\n                </div>\r\n                <label className=\"image-upload__text\" htmlFor={this.state.id}>{this.state.fileName}</label>\r\n                {this.state.hasImage ? (\r\n                    <button className=\"image-upload__remove\" onClick={() => this.removeImage()}>\r\n                        &#215;\r\n                    </button>\r\n                ) : null }\r\n                <label className=\"image-upload__button\" \r\n                       tabIndex={0}\r\n                       htmlFor={this.state.id}\r\n                       onKeyUp={event => this.handleKeyUp(event)}>\r\n                    <UploadIcon className=\"image-upload__icon\" />\r\n                </label>\r\n                <input className=\"hide-visual\"\r\n                       name=\"image\"\r\n                       tabIndex={-1}\r\n                       ref={this.inputRef}\r\n                       type=\"file\"\r\n                       id={this.state.id}\r\n                       onChange={event => this.handleChange(event)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageUpload;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { INoticeProps } from \"./interfaces/INoticeProps\";\r\nimport './style/Notice.css';\r\n\r\nconst Notice = (props: INoticeProps) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        ref.current?.classList.add(\"notice__show\");\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={ref} className={`notice ${props.type}`}>\r\n            <div className={`notice__line ${props.type}`}/>\r\n            <div className=\"notice__text-container\">\r\n                <div className={`notice__title ${props.type}`}>{props.type}</div>\r\n                <p className=\"notice__text\">{props.text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notice;\r\n","import ModalContainer from \"../Modal/ModalContainer\";\r\nimport ImageUpload from \"../ImageUpload/ImageUpload\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport Notice from \"../Notice/Notice\";\r\nimport { NoticeType } from \"../Notice/util/NoticeTypeEnum\";\r\nimport { useState } from \"react\";\r\nimport { Colour } from \"../../util/ColourEnum\";\r\nimport { MarkerStatus } from \"../Marker/util/MarkerStatusEnum\";\r\nimport { IMarkerModalProps } from \"./interfaces/IMarkerModalProps\";\r\nimport { ModalType } from \"../ModalSelector/util/ModalTypeEnum\";\r\nimport \"./style/MarkerModal.css\";\r\n\r\nconst MarkerModal = (props: IMarkerModalProps) => {\r\n    const [name, setName] = useState(props.marker?.name || \"\");\r\n    const [percentage, setPercentage] = useState(props.marker?.percentage || \"50\");\r\n    const [colour, setColour] = useState(props.marker?.colour || Colour.Gray);\r\n    const [status, setStatus] = useState(props.marker?.status || MarkerStatus.Active);\r\n    const [image, setImage] = useState<File | null>(null);\r\n    const [isNewImage, setIsNewImage] = useState<boolean>(false);\r\n    const [notice, setNotice] = useState<NoticeType>(NoticeType.None)\r\n\r\n    const handleSubmit = () => {\r\n        if (!validateInput()) {\r\n            return;\r\n        }\r\n        const isNewPercentage =  percentage !== props.marker?.percentage || ((props.marker.status === MarkerStatus.Complete || props.marker.status === MarkerStatus.Inactive) && status === MarkerStatus.Active);\r\n        const formData = new FormData();\r\n        formData.append(\"hillId\", props.hillId);\r\n        formData.append(\"name\", name);\r\n        formData.append(\"percentage\", percentage.toString());\r\n        formData.append(\"isNewPercentage\", isNewPercentage.toString());\r\n        formData.append(\"colour\", colour);\r\n        formData.append(\"status\", status);\r\n        \r\n        if (image !== null) {\r\n            formData.append(\"image\", image!, image.name)\r\n        }\r\n\r\n        if (props.marker !== undefined) {\r\n            formData.append(\"_id\", props.marker._id);\r\n            formData.append(\"x\", props.marker.x.toString());\r\n            formData.append(\"y\", props.marker.y.toString());\r\n            if (props.marker.imagePath !== undefined) {\r\n                formData.append(\"imagePath\", props.marker.imagePath);\r\n            }\r\n            props.update(props.marker._id, formData, isNewImage);\r\n            closeModal();\r\n        } else {\r\n            props.add(formData);\r\n            closeModal();\r\n        }\r\n\r\n        props.selectModal(ModalType.None);\r\n    }\r\n\r\n    const handleImageChange = (file: File | null) => {\r\n        if (file !== null) {\r\n            Resizer.imageFileResizer(\r\n                file,\r\n                64,\r\n                64,\r\n                \"PNG\",\r\n                100,\r\n                0,\r\n                (uri) => setImage(uri as File),\r\n                \"blob\"\r\n            );\r\n        } else setImage(null);\r\n    }\r\n\r\n    const validateInput = (): Boolean => {\r\n        setNotice(NoticeType.None)\r\n        if (!name.trim()) {\r\n            setNotice(NoticeType.Error);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const closeModal = () => {\r\n        document.querySelector('html')!.classList.toggle('scroll-lock');\r\n        props.selectModal(ModalType.None);\r\n    }\r\n    \r\n    return (\r\n        <ModalContainer onSubmit={() => handleSubmit()}\r\n                        onClose={() => props.selectModal(ModalType.None)}\r\n                        manualClose={true}\r\n                        isShown={true}\r\n                        trigger={props.buttonRef}\r\n                        text={{title: props.title, submit: \"Save\"}}>\r\n            <div className=\"marker-modal__content\">\r\n                <label className=\"marker-modal__label\">Marker image (optional): </label>\r\n                <ImageUpload id=\"marker-modal__upload\" \r\n                             alt=\"marker image\"\r\n                             imagePath={props.marker?.imagePath}\r\n                             isNewImage={isNewImage}\r\n                             setIsNewImage={setIsNewImage}\r\n                             onChange={handleImageChange} />\r\n                <label className=\"marker-modal__label\">Marker name: </label>\r\n                <input type=\"text\"\r\n                       className=\"marker-modal__input\"\r\n                       required\r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"marker-modal__label\">Marker percentage: </label>\r\n                <input type=\"text\"\r\n                       className=\"marker-modal__input\"\r\n                       required\r\n                       value={percentage}\r\n                       onChange={(e) => setPercentage(e.target.value)} />\r\n                <label className=\"marker-modal__label\">Marker colour: </label>\r\n                <select className=\"marker-modal__input\"\r\n                        required\r\n                        value={colour}\r\n                        onChange={(e) => setColour(e.target.value)}>\r\n                        {(Object.keys(Colour) as Array<keyof typeof Colour>).map((key) => {\r\n                            return <option key={key} value={Colour[key]} style={{color: Colour[key]}}>{key}</option>;\r\n                        })}\r\n                </select>\r\n                <label className=\"marker-modal__label\">Marker status: </label>\r\n                <select className=\"marker-modal__input\"\r\n                        required\r\n                        value={status}\r\n                        onChange={(e) => setStatus(e.target.value)}>\r\n                        {(Object.keys(MarkerStatus) as Array<keyof typeof MarkerStatus>).map((key) => {\r\n                            return <option key={key} value={MarkerStatus[key]}>{key}</option>;\r\n                        })}\r\n                </select>\r\n            </div>\r\n            { notice !== NoticeType.None ? <Notice text=\"Name field must not be empty\" type={NoticeType.Error} /> : null }            \r\n        </ModalContainer>\r\n    );\r\n}\r\n\r\nexport default MarkerModal;\r\n","import React from \"react\";\r\nimport MarkerModal from \"../MarkerModal/MarkerModal\";\r\nimport ModalContainer from \"../Modal/ModalContainer\";\r\nimport { IModalSelectorProps } from \"./interfaces/IModalSelectorProps\";\r\nimport { ModalType } from \"./util/ModalTypeEnum\";\r\nimport \"./style/ModalSelector.css\";\r\n\r\nconst ModalSelector : React.FC<IModalSelectorProps> = props => {\r\n    switch(props.modal) {\r\n        case ModalType.Add:\r\n            return (\r\n                <MarkerModal title=\"Add Marker\" \r\n                             hillId={props.hillId}\r\n                             buttonRef={props.addButtonRef}\r\n                             add={props.add} \r\n                             update={props.update}\r\n                             selectModal={props.selectModal} />\r\n            );\r\n        case ModalType.Edit:\r\n            return (\r\n                <MarkerModal title=\"Edit Marker\"\r\n                             hillId={props.hillId}\r\n                             buttonRef={props.updateButtonRef}\r\n                             add={props.add}\r\n                             update={props.update} \r\n                             marker={props.marker}\r\n                             selectModal={props.selectModal} />\r\n            );\r\n        case ModalType.Delete:\r\n            return (\r\n                <ModalContainer onSubmit={() => props.delete(props.marker!._id)}\r\n                                onClose={() => props.selectModal(ModalType.None)}\r\n                                manualClose={false}\r\n                                isShown={true}\r\n                                trigger={props.deleteButtonRef}\r\n                                text={{title: \"Delete Marker\", submit: \"Delete\"}}\r\n                                className=\"delete\">\r\n                    <p>Are you sure you want to delete <b>{props.marker!.name}</b>?</p>\r\n                </ModalContainer>\r\n            );\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport default ModalSelector;\r\n","import React from \"react\";\r\nimport AddIcon from \"../Icons/AddIcon\";\r\nimport DeleteIcon from \"../Icons/DeleteIcon\";\r\nimport EditIcon from \"../Icons/EditIcon\";\r\nimport ModalSelector from \"../ModalSelector/ModalSelector\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { IToolbarProps } from \"./interfaces/IToolbarProps\";\r\nimport { IToolbarStatus } from \"./interfaces/IToolbarStatus\";\r\nimport { ModalType } from \"../ModalSelector/util/ModalTypeEnum\";\r\nimport { baseUrl } from \"../../api\";\r\nimport \"./style/Toolbar.css\";\r\n\r\nclass Toolbar extends React.Component<IToolbarProps, IToolbarStatus> {\r\n    private dropdownContentRef = React.createRef<HTMLDivElement>();\r\n    private dropdownButtonRef = React.createRef<HTMLButtonElement>();\r\n    private addButtonRef = React.createRef<HTMLButtonElement>();\r\n    private editButtonRef = React.createRef<HTMLButtonElement>();\r\n    private deleteButtonRef = React.createRef<HTMLButtonElement>();\r\n\r\n    state = { activeModal: ModalType.None }\r\n    \r\n    selectModal = (modal: string) => this.setState({activeModal: modal});\r\n\r\n    openEditModal = (id: string) => {\r\n        this.toggleDropdown();\r\n        this.props.selectMarker(id);\r\n        this.selectModal(ModalType.Edit);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"mousedown\",  this.hideDropdown);\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        const state = this.dropdownContentRef.current?.style.display;\r\n        if (state === \"none\") {\r\n            this.dropdownContentRef.current!.style.display = \"flex\";\r\n        } else {\r\n            this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    hideDropdown = (event: MouseEvent) => {\r\n        if (!this.dropdownContentRef.current?.contains(event.target as HTMLDivElement) && \r\n        !this.dropdownContentRef.current?.contains(event.target as HTMLButtonElement)) {\r\n                this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"mousedown\", this.hideDropdown);\r\n    }\r\n    \r\n    render() {\r\n        const disable = !this.props.markers.some(marker => this.props.selectedMarker !== undefined && marker._id === this.props.selectedMarker);\r\n        const empty = this.props.markers.length === 0;\r\n        const style = disable && !empty ? \"dropdown__button disabled\" : \"dropdown__button\" ;\r\n        return (\r\n            <>\r\n                <div className=\"toolbar\">\r\n                    <button className=\"toolbar__button\"\r\n                            ref={this.addButtonRef}\r\n                            onClick={() => this.selectModal(ModalType.Add)}><AddIcon className=\"toolbar__icon\" /> Add</button>\r\n                    <div className=\"toolbar__edit\">\r\n                        <button className=\"toolbar__edit-button\"\r\n                                ref={this.editButtonRef}\r\n                                disabled={disable} \r\n                                onClick={() => this.selectModal(ModalType.Edit)}>\r\n                            <EditIcon className=\"toolbar__icon\" /><span>Edit</span>\r\n                        </button>\r\n                        <div className=\"dropdown\">\r\n                            <button className={style} \r\n                                    disabled={empty}\r\n                                    ref={this.dropdownButtonRef}\r\n                                    onClick={() => this.toggleDropdown()}>▼</button>\r\n                            <div className=\"dropdown__content\"\r\n                                style={{display: \"none\"}}\r\n                                ref={this.dropdownContentRef}>\r\n                                {this.props.markers.map((marker: IMarker, index) => (\r\n                                    <button className=\"dropdown__item\"\r\n                                            onClick={() => this.openEditModal(marker._id)}\r\n                                            key={index}>\r\n                                        { marker.imagePath ? \r\n                                            <img src={`${baseUrl}/${marker.imagePath}`} className=\"dropdown__marker\" alt=\"marker\"/> : \r\n                                            <div style={{backgroundColor: marker.colour}} className=\"dropdown__marker\" />\r\n                                        }\r\n                                        {marker.name}\r\n                                        \r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"toolbar__button delete\"\r\n                            ref={this.deleteButtonRef}\r\n                            disabled={disable}\r\n                            onClick={() => this.selectModal(ModalType.Delete)}>\r\n                        <DeleteIcon className=\"toolbar__icon\" /><span>Delete</span>\r\n                    </button>\r\n                </div>\r\n                <ModalSelector modal={this.state.activeModal}\r\n                               hillId={this.props.hillId}\r\n                               add={this.props.add}\r\n                               addButtonRef={this.addButtonRef}\r\n                               update={this.props.update}\r\n                               updateButtonRef={this.editButtonRef}\r\n                               delete={this.props.delete}\r\n                               deleteButtonRef={this.deleteButtonRef}\r\n                               marker={this.props.markers.find((m: IMarker) => m._id === this.props.selectedMarker)}\r\n                               selectModal={this.selectModal} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport Hill from \"../../components/Hill/Hill\";\r\nimport Toolbar from \"../../components/Toolbar/Toolbar\";\r\nimport { IMarker } from \"../../components/Marker/interfaces/IMarker\";\r\nimport { IHillPageProps } from \"./interfaces/IHillPageProps\"\r\nimport { IHillPageState } from \"./interfaces/IHillPageState\";\r\nimport { hillPlaceholder } from \"../../components/Hill/util/hillPlaceholder\";\r\nimport { createMarker, debounceUpdateMarker, deleteMarker, fetchHill, fetchHillMarkers, updateMarker } from \"../../api\";\r\nimport \"./style/HillPage.css\";\r\n\r\nclass HillPage extends React.Component<IHillPageProps, IHillPageState> {\r\n    state = {\r\n        hill: hillPlaceholder,\r\n        markers: [],\r\n        selectedMarker: \"\",\r\n        isMarkerClick: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.socket.emit(\"hill-connect\", this.props.id);\r\n        this.props.socket.on(\"update-hill-markers\", data => this.setState({ markers: data}));\r\n        fetchHill(this.props.id).then(res => this.setState({ hill: res.data }));\r\n        fetchHillMarkers(this.props.id).then(res => this.setState({ markers: res.data }));\r\n    };\r\n\r\n    update = () => this.props.socket.emit(\"update-hill-markers\", ({room: this.props.id, markers: this.state.markers}));\r\n\r\n    selectMarker = (id: string) => this.setState({isMarkerClick: true, selectedMarker: id});\r\n\r\n    deselectMarker = () => {\r\n        if (!this.state.isMarkerClick) this.setState({selectedMarker: \"\"});\r\n        this.setState({isMarkerClick: false});\r\n    }\r\n\r\n    addMarker = (formData: FormData) => {\r\n        createMarker(formData)\r\n            .then(res => {\r\n                this.setState({markers: [...this.state.markers, res.data]}, () => {\r\n                    this.update();\r\n                });\r\n            });\r\n    }\r\n\r\n    updateMarkerWithForm = (id: string, formData: FormData, isNewImage: boolean) => {\r\n        updateMarker(id, formData, isNewImage)\r\n            .then(res => {\r\n                let newMarkers: IMarker[] = [...this.state.markers];\r\n                const index = newMarkers.findIndex(m => m._id === res.data._id);\r\n                newMarkers[index] = res.data;\r\n                this.setState({markers: newMarkers}, () => {\r\n                    this.update();\r\n                });\r\n            })\r\n    }\r\n\r\n    updateMarker = (marker: IMarker) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === marker._id);\r\n        newMarkers[index] = marker;\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            debounceUpdateMarker(marker._id, marker);\r\n        });\r\n    }\r\n        \r\n    deleteMarker = (id: string) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === id);\r\n        newMarkers.splice(index, 1);\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            deleteMarker(id);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Hill hill={this.state.hill}\r\n                      markers={this.state.markers}\r\n                      selectedMarker={this.state.selectedMarker}\r\n                      updateMarker={this.updateMarker}\r\n                      selectMarker={this.selectMarker}\r\n                      deselectMarker={this.deselectMarker}\r\n                      size={{width: 1200, height: 450}} \r\n                      points={[[100,400],[300,350],[600,120],[900,350],[1100,400]]} />\r\n                <Toolbar markers={this.state.markers} \r\n                         selectedMarker={this.state.selectedMarker}\r\n                         hillId={this.props.id}\r\n                         selectMarker={this.selectMarker}\r\n                         add={this.addMarker}\r\n                         update={this.updateMarkerWithForm}\r\n                         delete={this.deleteMarker} />\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default HillPage;\r\n","import Home from \"./pages/Home/Home\";\r\nimport Create from \"./pages/Create/Create\";\r\nimport Edit from \"./pages/Edit/Edit\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport HillPage from \"./pages/HillPage/HillPage\";\r\n// import Footer from './components/Footer/Footer';\r\nimport { io } from 'socket.io-client';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nconst socket = io(\"/\");\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Navbar />\r\n                <Switch>\r\n                    <div className=\"container\">\r\n                        <Route exact path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        <Route path=\"/edit/:id\" render={props => (\r\n                            <Edit id={props.match.params.id}/>\r\n                        )} />\r\n                        <Route path=\"/create\">\r\n                            <Create />\r\n                        </Route>\r\n                        <Route path=\"/hill/:id\" render={props => (\r\n                            <HillPage id={props.match.params.id} socket={socket} />\r\n                        )} />\r\n                    </div>\r\n                </Switch>\r\n                {/* <Footer /> */}\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}