{"version":3,"sources":["components/Icons/DeleteIcon.tsx","api/index.ts","components/Marker/util/MarkerStatusEnum.ts","util/HelperFunctions.ts","pages/Home/Home.tsx","pages/Create/Create.tsx","pages/Edit/Edit.tsx","components/Icons/MoonIcon.tsx","components/Icons/SunIcon.tsx","components/ThemeSwitch/ThemeSwitch.tsx","components/Navbar/Navbar.tsx","components/Marker/util/MarkerHelper.ts","util/ColourEnum.ts","components/ModalSelector/util/ModalTypeEnum.ts","components/Marker/Marker.tsx","components/Hill/Hill.tsx","components/Icons/AddIcon.tsx","components/Icons/EditIcon.tsx","components/Modal/Modal.tsx","components/Modal/ModalContainer.tsx","components/MarkerModal/MarkerModal.tsx","components/ModalSelector/ModalSelector.tsx","components/Toolbar/Toolbar.tsx","components/Hill/util/hillPlaceholder.ts","pages/HillPage/HillPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DeleteIcon","props","className","fill","xmlns","viewBox","d","MarkerStatus","baseUrl","hillUrl","markerUrl","deleteHill","id","axios","delete","createMarker","newMarker","post","deleteMarker","debounceUpdateMarker","callback","wait","timer","args","clearTimeout","Promise","resolve","setTimeout","debounce","updatedMarker","Home","state","hills","then","filter","hill","_id","setState","get","res","data","this","map","index","to","name","author","description","Date","createdAt","toUTCString","updatedAt","onClick","React","Component","Create","useState","setName","setDescription","setAuthor","redirect","setRedirect","onSubmit","e","newHill","preventDefault","type","required","value","onChange","target","Edit","MoonIcon","SunIcon","ThemeSwitch","checked","setTheme","themeName","localStorage","setItem","document","querySelector","getItem","Navbar","MarkerHelper","getPointAtPercentage","pathNode","percentage","length","getTotalLength","svgPoint","getPointAtLength","x","y","getClosestPoint","point","best","scan","scanDistance","pathLength","precision","bestLength","bestDistance","Infinity","scanLength","distance2","beforeLength","before","after","afterLength","beforeDistance","afterDistance","p","dx","dy","Colour","ModalType","Marker","markerRef","createRef","drag","event","undefined","selectedMarker","marker","node","svg","m","d3","line","currentPos","status","Inactive","Complete","Active","updateMarker","click","selectMarker","bind","on","position","inactiveIndex","markers","findIndex","completeIndex","g","current","attr","append","style","colour","call","text","selectAll","remove","isNewPercentage","ref","Hill","curve","deselectMarker","path","datum","points","width","size","height","AddIcon","EditIcon","Modal","classname","ReactDOM","createPortal","role","tabIndex","onClickOutside","onKeyDown","modalRef","title","closeRef","closeModal","children","submit","body","ModalContainer","isShown","toggleScrollLock","classList","toggle","trigger","focus","onClose","key","HTMLElement","contains","MarkerModal","setPercentage","Gray","setColour","setStatus","hillId","parseInt","toString","update","add","selectModal","None","handleSubmit","buttonRef","Object","keys","color","ModalSelector","modal","Add","addButtonRef","updateButtonRef","Delete","deleteButtonRef","Toolbar","dropdownContentRef","dropdownButtonRef","editButtonRef","activeModal","openEditModal","toggleDropdown","display","hideDropdown","window","addEventListener","removeEventListener","disable","some","empty","disabled","backgroundColor","find","hillPlaceholder","HillPage","isMarkerClick","socket","emit","room","addMarker","newMarkers","splice","io","App","exact","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ae806d8.chunk.js","sourcesContent":["import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst DeleteIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n            <path d=\"M424 64h-88V48c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16H88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zM208 48c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96zM78.364 184a5 5 0 00-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042a5 5 0 00-4.994-5.238zM320 224c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default DeleteIcon;\r\n","import axios from 'axios';\r\nimport { IHill } from '../components/Hill/interfaces/IHill';\r\nimport { INewHill } from '../components/Hill/interfaces/INewHill';\r\nimport { IMarker } from '../components/Marker/interfaces/IMarker';\r\nimport { INewMarker } from '../components/Marker/interfaces/INewMarker';\r\nimport { debounce } from '../util/HelperFunctions';\r\n\r\nconst baseUrl = 'https://pebbletor.herokuapp.com';\r\nconst hillUrl = `${baseUrl}/hills`;\r\nconst markerUrl = `${baseUrl}/markers`;\r\n\r\nexport const fetchHills = () => axios.get(hillUrl);\r\nexport const fetchHill = (id: string) => axios.get(`${hillUrl}/${id}`);\r\nexport const createHill = (newHill: INewHill) => axios.post(hillUrl, newHill);\r\nexport const updateHill = (id: string, updatedHill: IHill) => axios.post(`${hillUrl}/${id}`, updatedHill);\r\nexport const deleteHill = (id: string) => axios.delete(`${hillUrl}/${id}`);\r\n\r\nexport const fetchHillMarkers = (hillId: string) => axios.get(`${markerUrl}/hill/${hillId}`);\r\nexport const fetchMarker = (id: string) => axios.get(`${markerUrl}/${id}`);\r\nexport const createMarker = (newMarker: INewMarker) => axios.post(markerUrl, newMarker);\r\nexport const updateMarker = (id: string, updatedMarker: IMarker) => axios.post(`${markerUrl}/${id}`, updatedMarker);\r\nexport const deleteMarker = (id: string) => axios.delete(`${markerUrl}/${id}`);\r\nexport const debounceUpdateMarker = debounce((id: string, updatedMarker: IMarker) => {\r\n    axios.post(`${markerUrl}/${id}`, updatedMarker);\r\n}, 200);\r\n","export enum MarkerStatus {\r\n    Inactive = \"inactive\",\r\n    Active = \"active\",\r\n    Complete = \"complete\"\r\n}\r\n","export function debounce<T extends unknown[], U>(callback: (...args: T) => PromiseLike<U> | U, wait: number) {\r\n    let timer: NodeJS.Timeout;\r\n  \r\n    return (...args: T): Promise<U> => {\r\n        clearTimeout(timer);\r\n        return new Promise((resolve) => {\r\n            timer = setTimeout(() => resolve(callback(...args)), wait);\r\n        });\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport DeleteIcon from \"../../components/Icons/DeleteIcon\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IHomeState } from \"./interfaces/IHomeState\";\r\nimport { IHill } from \"../../components/Hill/interfaces/IHill\";\r\nimport { deleteHill, fetchHills } from \"../../api\";\r\nimport \"./style/Home.css\";\r\n\r\nclass Home extends React.Component<{}, IHomeState> {\r\n    state = {\r\n        hills: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetchHills()\r\n            .then(res => this.setState({ hills: [...this.state.hills, ...res.data] }));\r\n    }\r\n\r\n    deleteHill = (id: string) => {\r\n        deleteHill(id)\r\n            .then(() => {\r\n                const hills = this.state.hills.filter((hill: IHill) => hill._id !== id);\r\n                this.setState({ hills: hills });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <h1 className=\"home__title\">Showing all hill charts</h1>\r\n                {this.state.hills.map((hill: IHill, index: number) => (\r\n                    <div key={index} className=\"card hill-card\">\r\n                        <Link to={`/hill/${hill._id}`} className=\"hill-card__link\">\r\n                            <h1>{hill.name}</h1>\r\n                        </Link>\r\n                        <p className=\"hill-card__author\">by {hill.author}</p>\r\n                        <p className=\"hill-card__description\">{hill.description}</p>\r\n                        <div className=\"hill-card__data\">\r\n                            <div className=\"hill-card__dates\">\r\n                                <p className=\"hill-card__date\">Created {new Date(hill.createdAt).toUTCString()}</p>\r\n                                {hill.updatedAt && <p className=\"hill-card__date\">Last updated {new Date(hill.updatedAt).toUTCString()}</p>}\r\n                            </div>\r\n                            <button onClick={() => this.deleteHill(hill._id)} className=\"hill-card__delete\">\r\n                                <DeleteIcon />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createHill } from \"../../api\";\r\nimport { INewHill } from \"../../components/Hill/interfaces/INewHill\";\r\nimport \"./style/Create.css\";\r\n\r\nconst Create = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const hill: INewHill = { \r\n            name,\r\n            description,\r\n            author\r\n        };\r\n\r\n        createHill(hill)\r\n            .then(() => {\r\n                setRedirect(true);\r\n            });\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h1 className=\"create__title\">Create a hill chart</h1>\r\n            <form onSubmit={handleSubmit} className=\"card create__form\">\r\n                <label className=\"create__label\">Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       className=\"create__input\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"create__label\">Hill chart description: </label>\r\n                <textarea className=\"create__input\"\r\n                          required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label className=\"create__label\">Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       className=\"create__input\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <span>\r\n                    <button className=\"create__save\" type=\"submit\">Save</button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useState } from \"react\";\r\nimport \"./style/Edit.css\";\r\n\r\nconst Edit = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const hill = { \r\n            name: name,\r\n            description: description,\r\n            author: author\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label>Hill chart description: </label>\r\n                <textarea required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label>Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n            <p>{name}</p>\r\n            <p>{description}</p>\r\n            <p>{author}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst MoonIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 512.001 512.001\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M470.218 159.659c-25.647-63.265-74.558-112.8-137.723-139.482C292.332 3.211 248.327-3.24 205.246 1.525c-18.368 2.031-32.9 15.609-36.161 33.787-3.253 18.138 5.634 35.881 22.115 44.151 31.723 15.917 56.581 42.823 69.997 75.762 30.531 74.958-5.539 160.805-80.403 191.367-32.893 13.427-69.478 14.45-103.019 2.88-17.422-6.01-36.334.042-47.056 15.061-10.702 14.991-10.283 34.805 1.04 49.306 26.682 34.168 62.01 61.167 102.167 78.08C165.931 505.399 199.648 512 233.149 512c57.539-.001 114.432-19.478 160.852-57.037 8.587-6.948 9.917-19.542 2.968-28.13-6.948-8.589-19.543-9.916-28.13-2.968-61.963 50.137-146.025 62.086-219.386 31.189-33.879-14.269-63.675-37.034-86.165-65.835-.396-.507-.544-.697-.011-1.443.567-.795.864-.691 1.454-.487 42.714 14.734 89.302 13.434 131.18-3.661 95.269-38.892 141.175-148.121 102.332-243.492-17.073-41.917-48.717-76.162-89.104-96.427-.598-.299-.845-.423-.682-1.335.176-.978.534-1.017 1.184-1.089 36.303-4.014 73.405 1.429 107.287 15.742 53.315 22.52 94.587 64.307 116.216 117.66 21.631 53.358 21.12 112.131-1.438 165.493a220.025 220.025 0 01-3.42 7.677c-4.687 10.004-.378 21.911 9.626 26.599 10.004 4.686 21.911.375 26.598-9.626a262.49 262.49 0 004.042-9.073c26.717-63.2 27.309-132.842 1.666-196.098z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default MoonIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst SunIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 302.4 302.4\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M204.8 97.6C191.2 84 172 75.2 151.2 75.2s-40 8.4-53.6 22.4c-13.6 13.6-22.4 32.8-22.4 53.6s8.8 40 22.4 53.6c13.6 13.6 32.8 22.4 53.6 22.4s40-8.4 53.6-22.4c13.6-13.6 22.4-32.8 22.4-53.6s-8.4-40-22.4-53.6zm-14.4 92.8c-10 10-24 16-39.2 16s-29.2-6-39.2-16-16-24-16-39.2 6-29.2 16-39.2 24-16 39.2-16 29.2 6 39.2 16 16 24 16 39.2-6 29.2-16 39.2zM292 140.8h-30.8c-5.6 0-10.4 4.8-10.4 10.4 0 5.6 4.8 10.4 10.4 10.4H292c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM151.2 250.8c-5.6 0-10.4 4.8-10.4 10.4V292c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4v-30.8c0-5.6-4.8-10.4-10.4-10.4zM258 243.6l-22-22c-3.6-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4zM151.2 0c-5.6 0-10.4 4.8-10.4 10.4v30.8c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4V10.4c0-5.6-4.8-10.4-10.4-10.4zM258.4 44.4c-4-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4 3.6 4 10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM41.2 140.8H10.4c-5.6 0-10.4 4.8-10.4 10.4s4.4 10.4 10.4 10.4h30.8c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM80.4 221.6c-3.6-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4s10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM80.4 66.4l-22-22c-4-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4z\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SunIcon;\r\n","import React from 'react';\r\nimport MoonIcon from '../Icons/MoonIcon';\r\nimport SunIcon from '../Icons/SunIcon';\r\nimport { IThemeSwitchState } from './interfaces/IThemeSwitchState';\r\nimport './style/ThemeSwitch.css';\r\n\r\nclass ThemeSwitch extends React.Component {\r\n    state: IThemeSwitchState = { checked: true }\r\n\r\n    componentDidMount() {\r\n        localStorage.getItem('theme') === 'dark-theme' ? this.setTheme('dark-theme') : this.setTheme('light-theme');\r\n    }\r\n\r\n    setTheme = (themeName: string) => {\r\n        themeName === \"light-theme\" ? this.setState({ checked: false }): this.setState({ checked: true });\r\n        localStorage.setItem('theme', themeName);\r\n        document.querySelector('body')!.className = themeName;\r\n    }\r\n\r\n    onClick = () => {\r\n        const updateChecked = !this.state.checked;\r\n        const themeName = updateChecked ? \"dark-theme\" : \"light-theme\";\r\n        this.setTheme(themeName);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.checked) {\r\n            return (\r\n                <div className=\"theme-switch\">\r\n                    <button className=\"theme-switch__button\" onClick={this.onClick} >\r\n                        <SunIcon className=\"theme-switch__icon--sun\" />\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <div className=\"theme-switch\">\r\n                <button className=\"theme-switch__button\" onClick={this.onClick} >\r\n                    <MoonIcon className=\"theme-switch__icon\" />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemeSwitch;\r\n","import ThemeSwitch from \"../ThemeSwitch/ThemeSwitch\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <Link to=\"/\" className=\"navbar__brand\">PEBBLETOR</Link>\r\n            <ul className=\"navbar__nav\">\r\n                <li className=\"navbar__item\"><ThemeSwitch /></li>\r\n                <li className=\"navbar__item\">\r\n                    <Link to=\"/\" className=\"navbar__link\">Hill Charts</Link>\r\n                </li>\r\n                <li className=\"navbar__item\">\r\n                    <Link to=\"/create\" className=\"navbar__link create\">Create</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","export class MarkerHelper {\r\n    static getPointAtPercentage = (pathNode: SVGPathElement, percentage: number) => {\r\n        const length = (pathNode.getTotalLength() / 100) * percentage;\r\n        const svgPoint = pathNode.getPointAtLength(length);\r\n        return [svgPoint.x, svgPoint.y];\r\n    }\r\n\r\n    static getClosestPoint = (pathNode: SVGPathElement, point: [number, number]) => {\r\n        let pathLength = pathNode.getTotalLength(), precision = 8, best, bestLength = 0, bestDistance = Infinity;\r\n\r\n        for (let scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\r\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\r\n                best = scan;\r\n                bestLength = scanLength;\r\n                bestDistance = scanDistance;\r\n            }\r\n        }\r\n\r\n        precision /= 2;\r\n        while (precision > 0.5) {\r\n            let before, after, beforeLength, afterLength, beforeDistance, afterDistance;\r\n            if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\r\n                best = before;\r\n                bestLength = beforeLength;\r\n                bestDistance = beforeDistance;\r\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\r\n                best = after;\r\n                bestLength = afterLength;\r\n                bestDistance = afterDistance;\r\n            } else {\r\n                precision /= 2;\r\n            }\r\n        }\r\n\r\n        best = [best?.x, best?.y];\r\n        return best;\r\n\r\n        function distance2(p: { x: number, y: number }) {\r\n            var dx = p.x - point[0],\r\n                dy = p.y - point[1];\r\n            return dx * dx + dy * dy;\r\n        }\r\n    }\r\n}\r\n","export enum Colour {\r\n    Gray = \"gray\",\r\n    Yellow = \"yellow\",\r\n    Orange = \"orange\",\r\n    Maroon = \"maroon\",\r\n    Red = \"red\",\r\n    Purple = \"purple\",\r\n    Fuchsia = \"fuchsia\",\r\n    Pink = \"pink\",\r\n    Green = \"green\",\r\n    Lime = \"lime\",\r\n    Olive = \"olive\",\r\n    Navy = \"navy\",\r\n    Blue = \"blue\",\r\n    Teal = \"teal\",\r\n    Aqua = \"aqua\",\r\n}\r\n","export enum ModalType {\r\n    Add = \"add\",\r\n    Edit = \"edit\",\r\n    Delete = \"delete\",\r\n    None = \"\"\r\n}\r\n","import React from \"react\";\r\nimport { IMarker } from \"./interfaces/IMarker\";\r\nimport { IMarkerProps } from \"./interfaces/IMarkerProps\";\r\nimport { MarkerHelper } from \"./util/MarkerHelper\";\r\nimport { MarkerStatus } from \"./util/MarkerStatusEnum\";\r\nimport * as d3 from \"d3\";\r\nimport \"./style/Marker.css\";\r\n\r\nclass Marker extends React.Component<IMarkerProps> {\r\n    private markerRef = React.createRef<SVGGElement>();\r\n    constructor(props: IMarkerProps) {\r\n        super(props);\r\n        this.drag = this.drag.bind(this);\r\n        this.click = this.click.bind(this);\r\n    }\r\n\r\n    drag = (event: any) => {\r\n        if (this.props.selectedMarker !== undefined && this.props.marker._id === this.props.selectedMarker) {\r\n            const node = this.props.svg;\r\n            const m = d3.pointer(event, node);\r\n            const p = MarkerHelper.getClosestPoint(this.props.line, m);\r\n            let newMarker = {...this.props.marker};\r\n            newMarker.currentPos = p as number[];\r\n            if (p[0] as number < 101) {\r\n                newMarker.status = MarkerStatus.Inactive;\r\n            } else if (p[0] as number > 1099) {\r\n                newMarker.status = MarkerStatus.Complete\r\n            } else {\r\n                newMarker.status = MarkerStatus.Active\r\n            }\r\n            this.props.updateMarker(newMarker);\r\n        }\r\n    }\r\n\r\n    click = () => this.props.selectMarker(this.props.marker._id);\r\n\r\n    componentDidMount() {\r\n        const drag = d3.drag<SVGCircleElement, unknown>().on(\"drag\", this.drag);\r\n        let position = this.props.marker.currentPos;\r\n        if (position.length === 0) {\r\n            position = MarkerHelper.getPointAtPercentage(this.props.line, this.props.marker.percentage);\r\n        }\r\n\r\n        const inactive = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Inactive);\r\n        const inactiveIndex = inactive.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n\r\n        if (inactiveIndex > -1) {\r\n            position = [110, 70 + (50 * (inactiveIndex ))]\r\n        }\r\n\r\n        const complete = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Complete);\r\n        const completeIndex = complete.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n\r\n        if (completeIndex > -1) {\r\n            position = [1000, 70 + (50 * (completeIndex ))]\r\n        }\r\n        \r\n        let g = d3.select(this.markerRef.current)\r\n        .attr(\"transform\", \"translate(\" + position + \")\");\r\n\r\n        g.append(\"circle\")\r\n            .attr(\"r\", 10)\r\n            .style(\"fill\", this.props.marker.colour)\r\n            .call(drag);\r\n\r\n        g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [-10, -20] + \")\")\r\n            .text(this.props.marker.name);\r\n\r\n        g.on(\"click\", this.click);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const drag = d3.drag<SVGCircleElement, unknown>().on(\"drag\", this.drag);\r\n        let g = d3.select(this.markerRef.current);\r\n\r\n        g.selectAll(\"text\").remove();\r\n        g.selectAll(\"circle\").remove();\r\n\r\n        g.append(\"circle\")\r\n                .attr(\"r\", 10)\r\n                .style(\"fill\", this.props.marker.colour)\r\n                .call(drag);\r\n\r\n        if (this.props.marker._id === this.props.selectedMarker) {\r\n            g.append(\"circle\")\r\n                .attr(\"r\", 12)\r\n                .attr(\"class\", \"selected-marker\")\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke-width\", 2)\r\n        }\r\n\r\n        g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [-10, -20] + \")\")\r\n            .text(this.props.marker.name);\r\n\r\n        const inactive = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Inactive);\r\n        const inactiveIndex = inactive.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n        let position = this.props.marker.currentPos;\r\n\r\n        if (inactiveIndex > -1) {\r\n            position = [110, 70 + (50 * (inactiveIndex ))]\r\n        }\r\n\r\n        const complete = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Complete);\r\n        const completeIndex = complete.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n\r\n        if (completeIndex > -1) {\r\n            position = [1000, 70 + (50 * (completeIndex ))]\r\n        }\r\n\r\n        if (this.props.marker.currentPos.length !== 0) {\r\n            if (this.props.marker.isNewPercentage) {\r\n                position = MarkerHelper.getPointAtPercentage(this.props.line, this.props.marker.percentage);\r\n            }\r\n\r\n            g.attr(\r\n                \"transform\",\r\n                \"translate(\" + position + \")\"\r\n            );\r\n        }\r\n\r\n        this.props.marker.currentPos = position;\r\n        this.props.marker.isNewPercentage = false;\r\n    }\r\n\r\n    render() {\r\n        return <g ref={this.markerRef}></g>;\r\n    }\r\n}\r\n\r\nexport default Marker;\r\n","import React from \"react\";\r\nimport Marker from \"../Marker/Marker\";\r\nimport { IHillProps } from \"./interfaces/IHillProps\";\r\nimport { IHillState } from \"./interfaces/IHillState\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport * as d3 from \"d3\";\r\nimport \"./style/Hill.css\";\r\n\r\nclass Hill extends React.Component<IHillProps, IHillState> {\r\n    state = {\r\n        svg: null,\r\n        line: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        const line = d3.line().curve(d3.curveCatmullRom);\r\n        const svg: any = d3.select(\"#hill__svg\");\r\n        svg.on(\"click\", this.props.deselectMarker);\r\n        const path = svg\r\n            .append(\"path\")\r\n            .datum(this.props.points)\r\n            .attr(\"d\", line)\r\n            .attr(\"id\", \"hill__path\");\r\n\r\n        svg.append(\"path\")\r\n            .datum([[600, 400],[600, 120]])\r\n            .attr(\"d\", d3.line())\r\n            .attr(\"class\", \"hill__line\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [100, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Inactive\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [990, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Complete\");\r\n        \r\n        this.setState({ svg: svg.node(), line: path.node() });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"hill\">\r\n                <h1 className=\"hill__title\">{this.props.hill.name}</h1>\r\n                <p className=\"hill__subtitle\">{this.props.hill.description}</p>\r\n                <svg id=\"hill__svg\"\r\n                    width={this.props.size.width}\r\n                    height={this.props.size.height}>\r\n                    {this.props.markers.map((marker: IMarker) => (\r\n                        <Marker svg={this.state.svg}\r\n                                line={this.state.line}\r\n                                marker={marker}\r\n                                markers={this.props.markers}\r\n                                selectedMarker={this.props.selectedMarker}\r\n                                selectMarker={this.props.selectMarker}\r\n                                updateMarker={this.props.updateMarker}\r\n                                key={marker._id} />\r\n                    ))}\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hill;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst AddIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M14.25 0H2.75C1.23 0 0 1.23 0 2.75v15.5C0 19.77 1.23 21 2.75 21h6.59a8.731 8.731 0 01-.84-3.75c0-1.15.22-2.25.63-3.26-.04.01-.08.01-.13.01H4c-.55 0-1-.45-1-1s.45-1 1-1h5c.38 0 .72.22.88.54A8.827 8.827 0 0112.36 10H4c-.55 0-1-.45-1-1s.45-1 1-1h9c.55 0 1 .45 1 1 0 .05 0 .09-.01.13.93-.38 1.95-.6 3.01-.62V2.75C17 1.23 15.77 0 14.25 0zM8 6H4c-.55 0-1-.45-1-1s.45-1 1-1h4c.55 0 1 .45 1 1s-.45 1-1 1z\"/>\r\n            <path d=\"M17.25 10.5c-3.722 0-6.75 3.028-6.75 6.75S13.528 24 17.25 24 24 20.972 24 17.25s-3.028-6.75-6.75-6.75zM20 18.25h-1.75V20a1 1 0 01-2 0v-1.75H14.5a1 1 0 010-2h1.75V14.5a1 1 0 012 0v1.75H20a1 1 0 010 2z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default AddIcon;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst EditIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 512 511\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M405.332 256.484c-11.797 0-21.332 9.559-21.332 21.332v170.668c0 11.754-9.559 21.332-21.332 21.332H64c-11.777 0-21.332-9.578-21.332-21.332V149.816c0-11.754 9.555-21.332 21.332-21.332h170.668c11.797 0 21.332-9.558 21.332-21.332 0-11.777-9.535-21.336-21.332-21.336H64c-35.285 0-64 28.715-64 64v298.668c0 35.286 28.715 64 64 64h298.668c35.285 0 64-28.714 64-64V277.816c0-11.796-9.54-21.332-21.336-21.332zm0 0\"/>\r\n            <path d=\"M200.02 237.05a10.793 10.793 0 00-2.922 5.438l-15.082 75.438c-.703 3.496.406 7.101 2.922 9.64a10.673 10.673 0 007.554 3.114c.68 0 1.387-.063 2.09-.211l75.414-15.082c2.09-.43 3.988-1.43 5.461-2.926l168.79-168.79-75.415-75.41zm0 0M496.383 16.102c-20.797-20.801-54.633-20.801-75.414 0l-29.524 29.523 75.414 75.414 29.524-29.527C506.453 81.465 512 68.066 512 53.816s-5.547-27.648-15.617-37.714zm0 0\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default EditIcon;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FocusTrap from 'focus-trap-react';\r\nimport { IModalProps } from './interfaces/IModalProps';\r\nimport \"./style/Modal.css\";\r\n\r\nconst Modal : React.FC<IModalProps> = props => {\r\n    const classname = `modal__button highlight ${props.className}`;\r\n\r\n    return ReactDOM.createPortal(\r\n        <FocusTrap>\r\n            <aside role=\"dialog\"\r\n                   tabIndex={-1}\r\n                   aria-modal=\"true\"\r\n                   className=\"modal\"\r\n                   onClick={event => props.onClickOutside(event)}\r\n                   onKeyDown={event => props.onKeyDown(event)}>\r\n                <div className=\"modal__card\" ref={props.modalRef}>\r\n                    <div className=\"modal__header\"> \r\n                        <h2 className=\"modal__header-title\">{props.text.title}</h2>\r\n                        <button ref={props.closeRef}\r\n                                className=\"modal__header-close\"\r\n                                aria-label=\"Close Modal\"\r\n                                aria-labelledby=\"close-modal\"\r\n                                onClick={() => props.closeModal()}>x</button>\r\n                        <span id=\"close-modal\" className=\"hide-visual\">\r\n                            Close\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"modal__content\">{props.children}</div>\r\n                    <div className=\"modal__footer\">\r\n                        <button className=\"modal__button\" onClick={() => props.closeModal()}>Cancel</button>\r\n                        <button className={classname} \r\n                                onClick={() => {\r\n                                    props.onSubmit()\r\n                                    props.closeModal()\r\n                                }}>{props.text.submit}</button>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        </FocusTrap>,\r\n        document.body\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\nimport { IModalContainerProps } from './interfaces/IModalContainerProps';\r\nimport { IModalContainerState } from './interfaces/IModalContainerState';\r\n\r\nclass ModalContainer extends React.Component<IModalContainerProps, IModalContainerState> {\r\n    private modalRef = React.createRef<HTMLDivElement>();\r\n    private closeRef = React.createRef<HTMLButtonElement>();\r\n\r\n    state = { isShown: this.props.isShown }\r\n\r\n    toggleScrollLock = () => {\r\n        document.querySelector('html')!.classList.toggle('scroll-lock');\r\n    };\r\n\r\n    closeModal = () => {\r\n        this.setState({ isShown: false });\r\n        this.props.trigger.current!.focus();\r\n        this.toggleScrollLock();\r\n        this.props.onClose()\r\n    };\r\n\r\n    onKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\r\n        if (event.key === \"Escape\") this.closeModal();\r\n    };\r\n    \r\n    onClickOutside = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        if (this.modalRef.current && event.target instanceof HTMLElement && this.modalRef.current.contains(event.target)) return\r\n        this.closeModal();\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.state.isShown) {\r\n            this.closeRef.current!.focus();\r\n            this.toggleScrollLock();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.state.isShown ? (\r\n            <Modal onSubmit={this.props.onSubmit}\r\n                   modalRef={this.modalRef}\r\n                   closeRef={this.closeRef}\r\n                   text={this.props.text}\r\n                   className={this.props.className}\r\n                   closeModal={this.closeModal}\r\n                   onKeyDown={this.onKeyDown}\r\n                   onClickOutside={this.onClickOutside}>\r\n                {this.props.children}\r\n            </Modal>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default ModalContainer;\r\n","import ModalContainer from \"../Modal/ModalContainer\";\r\nimport { useState } from \"react\";\r\nimport { Colour } from \"../../util/ColourEnum\";\r\nimport { MarkerStatus } from \"../Marker/util/MarkerStatusEnum\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { INewMarker } from \"../Marker/interfaces/INewMarker\";\r\nimport { IMarkerModalProps } from \"./interfaces/IMarkerModalProps\";\r\nimport { ModalType } from \"../ModalSelector/util/ModalTypeEnum\";\r\nimport \"./style/MarkerModal.css\";\r\n\r\nconst MarkerModal = (props: IMarkerModalProps) => {\r\n    const [name, setName] = useState(props.marker?.name || \"\");\r\n    const [percentage, setPercentage] = useState(props.marker?.percentage || \"50\");\r\n    const [colour, setColour] = useState(props.marker?.colour || Colour.Gray);\r\n    const [status, setStatus] = useState(props.marker?.status || MarkerStatus.Active);\r\n\r\n    const handleSubmit = () => {\r\n        const newMarker: INewMarker = {\r\n            hillId: props.hillId,\r\n            name,\r\n            percentage: parseInt(percentage.toString()),\r\n            isNewPercentage: percentage !== props.marker?.percentage || \r\n            ((props.marker.status === MarkerStatus.Complete || props.marker.status === MarkerStatus.Inactive) && status === MarkerStatus.Active),\r\n            currentPos: props.marker?.currentPos || [],\r\n            colour,\r\n            status,\r\n        }\r\n\r\n        if (props.marker !== undefined) {\r\n            const marker:IMarker = { \r\n                ...newMarker,\r\n                _id: props.marker._id,\r\n                createdAt: props.marker.createdAt,\r\n                updatedAt: props.marker.updatedAt\r\n            };\r\n            props.update(marker);\r\n        } else props.add(newMarker);\r\n\r\n        props.selectModal(ModalType.None);\r\n    }\r\n    \r\n    return (\r\n        <ModalContainer onSubmit={() => handleSubmit()}\r\n                        onClose={() => props.selectModal(ModalType.None)}\r\n                        isShown={true}\r\n                        trigger={props.buttonRef}\r\n                        text={{title: props.title, submit: \"Save\"}}>\r\n            <div className=\"marker-modal__content\">\r\n                <label className=\"marker-modal__label\">Marker name: </label>\r\n                <input type=\"text\"\r\n                        className=\"marker-modal__input\"\r\n                        required \r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"marker-modal__label\">Marker percentage: </label>\r\n                <input type=\"text\"\r\n                        className=\"marker-modal__input\"\r\n                        required\r\n                        value={percentage}\r\n                        onChange={(e) => setPercentage(e.target.value)} />\r\n                <label className=\"marker-modal__label\">Marker colour: </label>\r\n                <select className=\"marker-modal__input\"\r\n                        required\r\n                        value={colour}\r\n                        onChange={(e) => setColour(e.target.value)}>\r\n                        {(Object.keys(Colour) as Array<keyof typeof Colour>).map((key) => {\r\n                            return <option value={Colour[key]} style={{color: Colour[key]}}>{key}</option>;\r\n                        })}\r\n                </select>\r\n                <label className=\"marker-modal__label\">Marker status: </label>\r\n                <select className=\"marker-modal__input\"\r\n                        required\r\n                        value={status}\r\n                        onChange={(e) => setStatus(e.target.value)}>\r\n                        {(Object.keys(MarkerStatus) as Array<keyof typeof MarkerStatus>).map((key) => {\r\n                            return <option value={MarkerStatus[key]}>{key}</option>;\r\n                        })}\r\n                </select>\r\n            </div>\r\n        </ModalContainer>\r\n    );\r\n}\r\n\r\nexport default MarkerModal;\r\n","import React from \"react\";\r\nimport MarkerModal from \"../MarkerModal/MarkerModal\";\r\nimport ModalContainer from \"../Modal/ModalContainer\";\r\nimport { IModalSelectorProps } from \"./interfaces/IModalSelectorProps\";\r\nimport { ModalType } from \"./util/ModalTypeEnum\";\r\nimport \"./style/ModalSelector.css\";\r\n\r\nconst ModalSelector : React.FC<IModalSelectorProps> = props => {\r\n    switch(props.modal) {\r\n        case ModalType.Add:\r\n            return (\r\n                <MarkerModal title=\"Add Marker\" \r\n                             hillId={props.hillId}\r\n                             buttonRef={props.addButtonRef}\r\n                             add={props.add} \r\n                             update={props.update}\r\n                             selectModal={props.selectModal} />\r\n            );\r\n        case ModalType.Edit:\r\n            return (\r\n                <MarkerModal title=\"Edit Marker\"\r\n                             hillId={props.hillId}\r\n                             buttonRef={props.updateButtonRef}\r\n                             add={props.add}\r\n                             update={props.update} \r\n                             marker={props.marker}\r\n                             selectModal={props.selectModal} />\r\n            );\r\n        case ModalType.Delete:\r\n            return (\r\n                <ModalContainer onSubmit={() => props.delete(props.marker!._id)}\r\n                                onClose={() => props.selectModal(ModalType.None)}\r\n                                isShown={true}\r\n                                trigger={props.deleteButtonRef}\r\n                                text={{title: \"Delete marker\", submit: \"Delete\"}}\r\n                                className=\"delete\">\r\n                    <p>Are you sure you want to delete <b>{props.marker!.name}</b>?</p>\r\n                </ModalContainer>\r\n            );\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport default ModalSelector;\r\n","import React from \"react\";\r\nimport AddIcon from \"../Icons/AddIcon\";\r\nimport DeleteIcon from \"../Icons/DeleteIcon\";\r\nimport EditIcon from \"../Icons/EditIcon\";\r\nimport ModalSelector from \"../ModalSelector/ModalSelector\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { IToolbarProps } from \"./interfaces/IToolbarProps\";\r\nimport { IToolbarStatus } from \"./interfaces/IToolbarStatus\";\r\nimport { ModalType } from \"../ModalSelector/util/ModalTypeEnum\";\r\nimport \"./style/Toolbar.css\";\r\n\r\nclass Toolbar extends React.Component<IToolbarProps, IToolbarStatus> {\r\n    private dropdownContentRef = React.createRef<HTMLDivElement>();\r\n    private dropdownButtonRef = React.createRef<HTMLButtonElement>();\r\n    private addButtonRef = React.createRef<HTMLButtonElement>();\r\n    private editButtonRef = React.createRef<HTMLButtonElement>();\r\n    private deleteButtonRef = React.createRef<HTMLButtonElement>();\r\n\r\n    state = { activeModal: ModalType.None }\r\n    \r\n    selectModal = (modal: string) => this.setState({activeModal: modal});\r\n\r\n    openEditModal = (id: string) => {\r\n        this.toggleDropdown();\r\n        this.props.selectMarker(id);\r\n        this.selectModal(ModalType.Edit);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"mousedown\",  this.hideDropdown);\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        const state = this.dropdownContentRef.current?.style.display;\r\n        if (state === \"none\") {\r\n            this.dropdownContentRef.current!.style.display = \"flex\";\r\n        } else {\r\n            this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    hideDropdown = (event: MouseEvent) => {\r\n        if (!this.dropdownContentRef.current?.contains(event.target as HTMLDivElement) && \r\n        !this.dropdownContentRef.current?.contains(event.target as HTMLButtonElement)) {\r\n                this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"mousedown\", this.hideDropdown);\r\n    }\r\n    \r\n    render() {\r\n        const disable = !this.props.markers.some(marker => this.props.selectedMarker !== undefined && marker._id === this.props.selectedMarker);\r\n        const empty = this.props.markers.length === 0;\r\n        const style = disable && !empty ? \"dropdown__button disabled\" : \"dropdown__button\" ;\r\n        return (\r\n            <>\r\n                <div className=\"toolbar\">\r\n                    <button className=\"toolbar__button\"\r\n                            ref={this.addButtonRef}\r\n                            onClick={() => this.selectModal(ModalType.Add)}><AddIcon className=\"toolbar__icon\" /> Add</button>\r\n                    <div className=\"toolbar__edit\">\r\n                        <button className=\"toolbar__edit-button\"\r\n                                ref={this.editButtonRef}\r\n                                disabled={disable} \r\n                                onClick={() => this.selectModal(ModalType.Edit)}>\r\n                            <EditIcon className=\"toolbar__icon\" /><span>Edit</span>\r\n                        </button>\r\n                        <div className=\"dropdown\">\r\n                            <button className={style} \r\n                                    disabled={empty}\r\n                                    ref={this.dropdownButtonRef}\r\n                                    onClick={() => this.toggleDropdown()}>▼</button>\r\n                            <div className=\"dropdown__content\"\r\n                                style={{display: \"none\"}}\r\n                                ref={this.dropdownContentRef}>\r\n                                {this.props.markers.map((marker: IMarker, index) => (\r\n                                    <button className=\"dropdown__item\"\r\n                                            onClick={() => this.openEditModal(marker._id)}\r\n                                            key={index}>\r\n                                        <div style={{backgroundColor: marker.colour}} className=\"dropdown__marker\"></div>{marker.name}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"toolbar__button delete\"\r\n                            ref={this.deleteButtonRef}\r\n                            disabled={disable}\r\n                            onClick={() => this.selectModal(ModalType.Delete)}>\r\n                        <DeleteIcon className=\"toolbar__icon\" /><span>Delete</span>\r\n                    </button>\r\n                </div>\r\n                <ModalSelector modal={this.state.activeModal}\r\n                               hillId={this.props.hillId}\r\n                               add={this.props.add}\r\n                               addButtonRef={this.addButtonRef}\r\n                               update={this.props.update}\r\n                               updateButtonRef={this.editButtonRef}\r\n                               delete={this.props.delete}\r\n                               deleteButtonRef={this.deleteButtonRef}\r\n                               marker={this.props.markers.find((m: IMarker) => m._id === this.props.selectedMarker)}\r\n                               selectModal={this.selectModal} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;\r\n","import { IHill } from \"../interfaces/IHill\";\r\n\r\nexport const hillPlaceholder: IHill = {\r\n    _id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    author: \"\",\r\n    createdAt: 0,\r\n    updatedAt: 0\r\n}\r\n","import React from \"react\";\r\nimport Hill from \"../../components/Hill/Hill\";\r\nimport Toolbar from \"../../components/Toolbar/Toolbar\";\r\nimport { IMarker } from \"../../components/Marker/interfaces/IMarker\";\r\nimport { INewMarker } from \"../../components/Marker/interfaces/INewMarker\";\r\nimport { IHillPageProps } from \"./interfaces/IHillPageProps\"\r\nimport { IHillPageState } from \"./interfaces/IHillPageState\";\r\nimport { hillPlaceholder } from \"../../components/Hill/util/hillPlaceholder\";\r\nimport { createMarker, debounceUpdateMarker, deleteMarker, fetchHill, fetchHillMarkers } from \"../../api\";\r\nimport \"./style/HillPage.css\";\r\n\r\nclass HillPage extends React.Component<IHillPageProps, IHillPageState> {\r\n    state = {\r\n        hill: hillPlaceholder,\r\n        markers: [],\r\n        selectedMarker: \"\",\r\n        isMarkerClick: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.socket.emit(\"hill-connect\", this.props.id);\r\n        this.props.socket.on(\"update-hill-markers\", data => this.setState({ markers: data}));\r\n        fetchHill(this.props.id).then(res => this.setState({ hill: res.data }));\r\n        fetchHillMarkers(this.props.id).then(res => this.setState({ markers: res.data }));\r\n    };\r\n\r\n    update = () => this.props.socket.emit(\"update-hill-markers\", ({room: this.props.id, markers: this.state.markers}));\r\n\r\n    selectMarker = (id: string) => this.setState({isMarkerClick: true, selectedMarker: id});\r\n\r\n    deselectMarker = () => {\r\n        if (!this.state.isMarkerClick) this.setState({selectedMarker: \"\"});\r\n        this.setState({isMarkerClick: false});\r\n    }\r\n\r\n    addMarker = (marker: INewMarker) => {\r\n        createMarker(marker)\r\n            .then((res) => {\r\n                this.setState({markers: [...this.state.markers, res.data]}, () => {\r\n                    this.update();\r\n                });\r\n            });\r\n    }\r\n\r\n    updateMarker = (marker: IMarker) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === marker._id);\r\n        newMarkers[index] = marker;\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            debounceUpdateMarker(marker._id, marker)\r\n        });\r\n    }\r\n        \r\n    deleteMarker = (id: string) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === id);\r\n        newMarkers.splice(index, 1);\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            deleteMarker(id);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Hill hill={this.state.hill}\r\n                      markers={this.state.markers}\r\n                      selectedMarker={this.state.selectedMarker}\r\n                      updateMarker={this.updateMarker}\r\n                      selectMarker={this.selectMarker}\r\n                      deselectMarker={this.deselectMarker}\r\n                      size={{width: 1200, height: 450}} \r\n                      points={[[100,400],[300,350],[600,120],[900,350],[1100,400]]} />\r\n                <Toolbar markers={this.state.markers} \r\n                         selectedMarker={this.state.selectedMarker}\r\n                         hillId={this.props.id}\r\n                         selectMarker={this.selectMarker}\r\n                         add={this.addMarker}\r\n                         update={this.updateMarker}\r\n                         delete={this.deleteMarker} />\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default HillPage;\r\n","import Home from \"./pages/Home/Home\";\r\nimport Create from \"./pages/Create/Create\";\r\nimport Edit from \"./pages/Edit/Edit\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport HillPage from \"./pages/HillPage/HillPage\";\r\n// import Footer from './components/Footer/Footer';\r\nimport { io } from 'socket.io-client';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nconst socket = io(\"/\");\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Navbar />\r\n                <Switch>\r\n                    <div className=\"container\">\r\n                        <Route exact path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        <Route path=\"/edit/:id\">\r\n                            <Edit />\r\n                        </Route>\r\n                        <Route path=\"/create\">\r\n                            <Create />\r\n                        </Route>\r\n                        <Route path=\"/hill/:id\" render={(props) => (\r\n                            <HillPage id={props.match.params.id} socket={socket} />\r\n                        )} />\r\n                    </div>\r\n                </Switch>\r\n                {/* <Footer /> */}\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}