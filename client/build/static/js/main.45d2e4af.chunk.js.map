{"version":3,"sources":["api/index.js","components/Icons/DeleteIcon.tsx","pages/Home/Home.tsx","pages/Create/Create.tsx","pages/Edit/Edit.tsx","components/ThemeSwitch/ThemeSwitch.tsx","components/Navbar/Navbar.tsx","util/MarkerHelper.ts","util/MarkerStatusEnum.ts","util/ColourEnum.ts","components/Marker/Marker.tsx","components/Icons/AddIcon.tsx","components/Icons/EditIcon.tsx","components/Toolbar/Toolbar.tsx","components/MarkerForm/MarkerForm.tsx","components/Modal/Modal.tsx","util/hillPlaceholder.ts","components/Hill/Hill.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseUrl","hillUrl","markerUrl","deleteHill","id","axios","delete","createMarker","newMarker","post","deleteMarker","debounceUpdateMarker","func","timeout","timer","args","clearTimeout","setTimeout","debounce","updatedMarker","DeleteIcon","props","className","fill","xmlns","viewBox","d","Home","state","hills","then","filter","hill","_id","setState","get","res","data","this","map","index","to","name","author","description","Date","createdAt","toUTCString","updatedAt","onClick","React","Component","Create","useState","setName","setDescription","setAuthor","redirect","setRedirect","onSubmit","e","newHill","preventDefault","type","required","value","onChange","target","Edit","ThemeSwitch","checked","setTheme","themeName","localStorage","setItem","document","querySelector","getItem","Navbar","MarkerHelper","getPointAtPercentage","pathNode","percentage","length","getTotalLength","svgPoint","getPointAtLength","x","y","getClosestPoint","point","best","scan","scanDistance","pathLength","precision","bestLength","bestDistance","Infinity","scanLength","distance2","before","after","beforeLength","afterLength","beforeDistance","afterDistance","p","dx","dy","MarkerStatus","Colour","Marker","markerRef","createRef","drag","bind","click","event","undefined","selectedMarker","marker","node","svg","m","d3","line","currentPos","status","Inactive","Complete","Active","updateMarker","selectMarker","on","position","inactiveIndex","markers","findIndex","completeIndex","g","current","attr","append","style","colour","call","text","selectAll","remove","isNewPercentage","ref","AddIcon","EditIcon","Toolbar","dropdownContentRef","dropdownButtonRef","edit","toggleDropdown","selectModal","display","hideDropdown","contains","window","addEventListener","removeEventListener","disable","some","empty","disabled","backgroundColor","MarkerForm","setPercentage","Gray","setColour","setStatus","title","hillId","parseInt","toString","update","add","Object","keys","key","color","Modal","modal","hillPlaceholder","Hill","activeModal","isMarkerClick","socket","emit","room","deselectMarker","addMarker","newMarkers","splice","curve","path","datum","points","width","size","height","find","io","App","exact","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45d2e4af.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst debounce = (func, timeout) => {\r\n    let timer;\r\n    return (...args) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => func(...args), timeout);\r\n    };\r\n}\r\n\r\nconst baseUrl = 'https://pebbletor.herokuapp.com';\r\nconst hillUrl = `${baseUrl}/hills`;\r\nconst markerUrl = `${baseUrl}/markers`;\r\n\r\nexport const fetchHills = () => axios.get(hillUrl);\r\nexport const fetchHill = (id) => axios.get(`${hillUrl}/${id}`);\r\nexport const createHill = (newHill) => axios.post(hillUrl, newHill);\r\nexport const updateHill = (id, updatedHill) => axios.post(`${hillUrl}/${id}`, updatedHill);\r\nexport const deleteHill = (id) => axios.delete(`${hillUrl}/${id}`);\r\n\r\nexport const fetchHillMarkers = (hillId) => axios.get(`${markerUrl}/hill/${hillId}`);\r\nexport const fetchMarker = (id) => axios.get(`${markerUrl}/${id}`);\r\nexport const createMarker = (newMarker) => axios.post(markerUrl, newMarker);\r\nexport const updateMarker = (id, updatedMarker) => axios.post(`${markerUrl}/${id}`, updatedMarker);\r\nexport const deleteMarker = (id) => axios.delete(`${markerUrl}/${id}`);\r\nexport const debounceUpdateMarker = debounce((id, updatedMarker) => {\r\n    axios.post(`${markerUrl}/${id}`, updatedMarker);\r\n}, 200);\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst DeleteIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n            <path d=\"M424 64h-88V48c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16H88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zM208 48c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96zM78.364 184a5 5 0 00-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042a5 5 0 00-4.994-5.238zM320 224c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default DeleteIcon;","import React from \"react\";\r\nimport { IHomeState } from \"./interfaces/IHomeState\";\r\nimport { IHill } from \"../../components/Hill/interfaces/IHill\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteHill, fetchHills } from \"../../api\";\r\nimport \"./style/Home.css\";\r\nimport DeleteIcon from \"../../components/Icons/DeleteIcon\";\r\n\r\nclass Home extends React.Component<{}, IHomeState> {\r\n    state = {\r\n        hills: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetchHills()\r\n            .then(res => this.setState({ hills: [...this.state.hills, ...res.data] }));\r\n    }\r\n\r\n    deleteHill = (id: string) => {\r\n        deleteHill(id)\r\n            .then(() => {\r\n                const hills = this.state.hills.filter((hill: IHill) => hill._id !== id);\r\n                this.setState({ hills: hills });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <h1 className=\"home__title\">Showing all hill charts</h1>\r\n                {this.state.hills.map((hill: IHill, index: number) => (\r\n                    <div key={index} className=\"card hill-card\">\r\n                        <Link to={`/hill/${hill._id}`} className=\"hill-card__link\">\r\n                            <h1>{hill.name}</h1>\r\n                        </Link>\r\n                        <p className=\"hill-card__author\">by {hill.author}</p>\r\n                        <p className=\"hill-card__description\">{hill.description}</p>\r\n                        <div className=\"hill-card__data\">\r\n                            <div className=\"hill-card__dates\">\r\n                                <p className=\"hill-card__date\">Created {new Date(hill.createdAt).toUTCString()}</p>\r\n                                {hill.updatedAt && <p className=\"hill-card__date\">Last updated {new Date(hill.updatedAt).toUTCString()}</p>}\r\n                            </div>\r\n                            <button onClick={() => this.deleteHill(hill._id)} className=\"hill-card__delete\">\r\n                                <DeleteIcon />\r\n                            </button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./style/Create.css\";\r\nimport { createHill } from \"../../api\";\r\n\r\nconst Create = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const hill = { \r\n            name,\r\n            description,\r\n            author\r\n        };\r\n\r\n        createHill(hill)\r\n            .then(res => {\r\n                setRedirect(true);\r\n            });\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h1 className=\"create__title\">Create a hill chart</h1>\r\n            <form onSubmit={handleSubmit} className=\"card create__form\">\r\n                <label className=\"create__label\">Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       className=\"create__input\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"create__label\">Hill chart description: </label>\r\n                <textarea className=\"create__input\"\r\n                          required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label className=\"create__label\">Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       className=\"create__input\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <span>\r\n                    <button className=\"create__save\" type=\"submit\">Save</button>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useState } from \"react\";\r\nimport \"./style/Edit.css\";\r\n\r\nconst Edit = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const hill = { \r\n            name: name,\r\n            description: description,\r\n            author: author\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Hill chart name: </label>\r\n                <input type=\"text\"\r\n                       required \r\n                       value={name}\r\n                       onChange={(e) => setName(e.target.value)} />\r\n                <label>Hill chart description: </label>\r\n                <textarea required\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)} />\r\n                <label>Hill chart author: </label>\r\n                <input type=\"text\"\r\n                       required\r\n                       value={author}\r\n                       onChange={(e) => setAuthor(e.target.value)} />\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n            <p>{name}</p>\r\n            <p>{description}</p>\r\n            <p>{author}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport './style/ThemeSwitch.css';\r\nimport { IThemeSwitchState } from './interfaces/IThemeSwitchState';\r\n\r\nclass ThemeSwitch extends React.Component {\r\n    state: IThemeSwitchState = {\r\n        checked: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('theme') === 'dark-theme') {\r\n            this.setTheme('dark-theme');\r\n        } else {\r\n            this.setTheme('light-theme');\r\n        }\r\n    }\r\n\r\n    setTheme = (themeName: string) => {\r\n        if (themeName === \"light-theme\") {\r\n            this.setState({ checked: false })\r\n        } else {\r\n            this.setState({ checked: true })\r\n        }\r\n\r\n        localStorage.setItem('theme', themeName);\r\n        document.querySelector('body')!.className = themeName;\r\n    }\r\n\r\n    onClick = () => {\r\n        const updateChecked = !this.state.checked;\r\n        const themeName: string = updateChecked ? \"dark-theme\" : \"light-theme\";\r\n        this.setTheme(themeName);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.checked) {\r\n            return (\r\n                <div className=\"theme-switch\">\r\n                    <button className=\"theme-switch--button\" onClick={this.onClick} >\r\n                        <svg className=\"theme-switch--icon-sun\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 302.4 302.4\">\r\n                            <path d=\"M204.8 97.6C191.2 84 172 75.2 151.2 75.2s-40 8.4-53.6 22.4c-13.6 13.6-22.4 32.8-22.4 53.6s8.8 40 22.4 53.6c13.6 13.6 32.8 22.4 53.6 22.4s40-8.4 53.6-22.4c13.6-13.6 22.4-32.8 22.4-53.6s-8.4-40-22.4-53.6zm-14.4 92.8c-10 10-24 16-39.2 16s-29.2-6-39.2-16-16-24-16-39.2 6-29.2 16-39.2 24-16 39.2-16 29.2 6 39.2 16 16 24 16 39.2-6 29.2-16 39.2zM292 140.8h-30.8c-5.6 0-10.4 4.8-10.4 10.4 0 5.6 4.8 10.4 10.4 10.4H292c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM151.2 250.8c-5.6 0-10.4 4.8-10.4 10.4V292c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4v-30.8c0-5.6-4.8-10.4-10.4-10.4zM258 243.6l-22-22c-3.6-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4zM151.2 0c-5.6 0-10.4 4.8-10.4 10.4v30.8c0 5.6 4.8 10.4 10.4 10.4 5.6 0 10.4-4.8 10.4-10.4V10.4c0-5.6-4.8-10.4-10.4-10.4zM258.4 44.4c-4-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4 3.6 4 10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM41.2 140.8H10.4c-5.6 0-10.4 4.8-10.4 10.4s4.4 10.4 10.4 10.4h30.8c5.6 0 10.4-4.8 10.4-10.4 0-5.6-4.8-10.4-10.4-10.4zM80.4 221.6c-3.6-4-10.4-4-14.4 0l-22 22c-4 4-4 10.4 0 14.4s10.4 4 14.4 0l22-22c4-4 4-10.4 0-14.4zM80.4 66.4l-22-22c-4-4-10.4-4-14.4 0s-4 10.4 0 14.4l22 22c4 4 10.4 4 14.4 0s4-10.4 0-14.4z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"theme-switch\">\r\n                <button className=\"theme-switch--button\" onClick={this.onClick} >\r\n                    <svg className=\"theme-switch--icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512.001 512.001\">\r\n                        <path d=\"M470.218 159.659c-25.647-63.265-74.558-112.8-137.723-139.482C292.332 3.211 248.327-3.24 205.246 1.525c-18.368 2.031-32.9 15.609-36.161 33.787-3.253 18.138 5.634 35.881 22.115 44.151 31.723 15.917 56.581 42.823 69.997 75.762 30.531 74.958-5.539 160.805-80.403 191.367-32.893 13.427-69.478 14.45-103.019 2.88-17.422-6.01-36.334.042-47.056 15.061-10.702 14.991-10.283 34.805 1.04 49.306 26.682 34.168 62.01 61.167 102.167 78.08C165.931 505.399 199.648 512 233.149 512c57.539-.001 114.432-19.478 160.852-57.037 8.587-6.948 9.917-19.542 2.968-28.13-6.948-8.589-19.543-9.916-28.13-2.968-61.963 50.137-146.025 62.086-219.386 31.189-33.879-14.269-63.675-37.034-86.165-65.835-.396-.507-.544-.697-.011-1.443.567-.795.864-.691 1.454-.487 42.714 14.734 89.302 13.434 131.18-3.661 95.269-38.892 141.175-148.121 102.332-243.492-17.073-41.917-48.717-76.162-89.104-96.427-.598-.299-.845-.423-.682-1.335.176-.978.534-1.017 1.184-1.089 36.303-4.014 73.405 1.429 107.287 15.742 53.315 22.52 94.587 64.307 116.216 117.66 21.631 53.358 21.12 112.131-1.438 165.493a220.025 220.025 0 01-3.42 7.677c-4.687 10.004-.378 21.911 9.626 26.599 10.004 4.686 21.911.375 26.598-9.626a262.49 262.49 0 004.042-9.073c26.717-63.2 27.309-132.842 1.666-196.098z\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemeSwitch;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ThemeSwitch from \"../ThemeSwitch/ThemeSwitch\";\r\nimport \"./style/Navbar.css\";\r\n\r\nexport default class Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <Link to=\"/\" className=\"navbar__brand\">PEBBLETOR</Link>\r\n                <ul className=\"navbar__nav\">\r\n                    <li className=\"navbar__item\"><ThemeSwitch /></li>\r\n                    <li className=\"navbar__item\">\r\n                        <Link to=\"/\" className=\"navbar__link\">Hill Charts</Link>\r\n                    </li>\r\n                    <li className=\"navbar__item\">\r\n                        <Link to=\"/create\" className=\"navbar__link create\">Create</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","export class MarkerHelper {\r\n    static getPointAtPercentage = (pathNode: SVGPathElement, percentage: number) => {\r\n        const length = (pathNode.getTotalLength() / 100) * percentage;\r\n        const svgPoint = pathNode.getPointAtLength(length);\r\n        return [svgPoint.x, svgPoint.y];\r\n    }\r\n    \r\n    static getClosestPoint = (pathNode: SVGPathElement, point: [number, number]) => {\r\n        var pathLength = pathNode.getTotalLength(),\r\n            precision = 8,\r\n            best,\r\n            bestLength = 0,\r\n            bestDistance = Infinity;\r\n      \r\n        // linear scan for coarse approximation\r\n        for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\r\n            if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\r\n                best = scan;\r\n                bestLength = scanLength;\r\n                bestDistance = scanDistance;\r\n            }\r\n        }\r\n      \r\n        // binary search for precise estimate\r\n        precision /= 2;\r\n        while (precision > 0.5) {\r\n            var before,\r\n                after,\r\n                beforeLength,\r\n                afterLength,\r\n                beforeDistance,\r\n                afterDistance;\r\n        beforeLength = bestLength - precision;\r\n        beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength));\r\n            if (beforeLength >= 0 && beforeDistance < bestDistance) {\r\n                best = before;\r\n                bestLength = beforeLength;\r\n                bestDistance = beforeDistance;\r\n            } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\r\n                best = after;\r\n                bestLength = afterLength;\r\n                bestDistance = afterDistance;\r\n            } else {\r\n                precision /= 2;\r\n            }\r\n        }\r\n    \r\n        best = [best?.x, best?.y];\r\n        return best;\r\n      \r\n        function distance2(p: {x: number, y: number}) {\r\n            var dx = p.x - point[0],\r\n                dy = p.y - point[1];\r\n            return dx * dx + dy * dy;\r\n        }\r\n    }\r\n}","export enum MarkerStatus {\r\n    Inactive = \"inactive\",\r\n    Active = \"active\",\r\n    Complete = \"complete\"\r\n}","export enum Colour {\r\n    Gray = \"gray\",\r\n    Yellow = \"yellow\",\r\n    Orange = \"orange\",\r\n    Maroon = \"maroon\",\r\n    Red = \"red\",\r\n    Purple = \"purple\",\r\n    Fuchsia = \"fuchsia\",\r\n    Pink = \"pink\",\r\n    Green = \"green\",\r\n    Lime = \"lime\",\r\n    Olive = \"olive\",\r\n    Navy = \"navy\",\r\n    Blue = \"blue\",\r\n    Teal = \"teal\",\r\n    Aqua = \"aqua\",\r\n}","import React from \"react\";\r\nimport { IMarkerProps } from \"./interfaces/IMarkerProps\";\r\nimport { MarkerHelper } from \"../../util/MarkerHelper\";\r\nimport * as d3 from \"d3\";\r\nimport \"./style/Marker.css\";\r\nimport { MarkerStatus } from \"../../util/MarkerStatusEnum\";\r\nimport { IMarker } from \"./interfaces/IMarker\";\r\n\r\nclass Marker extends React.Component<IMarkerProps> {\r\n    private markerRef = React.createRef<SVGGElement>();\r\n    constructor(props: IMarkerProps) {\r\n        super(props);\r\n        this.drag = this.drag.bind(this);\r\n        this.click = this.click.bind(this);\r\n    }\r\n\r\n    drag(event: any) {\r\n        if (this.props.selectedMarker !== undefined && this.props.marker._id === this.props.selectedMarker._id) {\r\n            const node = this.props.svg;\r\n            const m = d3.pointer(event, node);\r\n            const p = MarkerHelper.getClosestPoint(this.props.line, m);\r\n            let newMarker = {...this.props.marker};\r\n            newMarker.currentPos = p as number[];\r\n            if (p[0] as number < 101) {\r\n                newMarker.status = MarkerStatus.Inactive;\r\n            } else if (p[0] as number > 1099) {\r\n                newMarker.status = MarkerStatus.Complete\r\n            } else {\r\n                newMarker.status = MarkerStatus.Active\r\n            }\r\n            this.props.updateMarker(newMarker);\r\n        }\r\n    }\r\n\r\n    click() {\r\n        this.props.selectMarker(this.props.marker);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const drag = d3.drag<SVGCircleElement, unknown>().on(\"drag\", this.drag);\r\n        let position = this.props.marker.currentPos;\r\n        if (position.length === 0) {\r\n            position = MarkerHelper.getPointAtPercentage(this.props.line, this.props.marker.percentage);\r\n        }\r\n\r\n        const inactive = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Inactive);\r\n        const inactiveIndex = inactive.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n\r\n        if (inactiveIndex > -1) {\r\n            position = [110, 70 + (50 * (inactiveIndex ))]\r\n        }\r\n\r\n        const complete = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Complete);\r\n        const completeIndex = complete.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n\r\n        if (completeIndex > -1) {\r\n            position = [1000, 70 + (50 * (completeIndex ))]\r\n        }\r\n        \r\n        let g = d3.select(this.markerRef.current)\r\n        .attr(\"transform\", \"translate(\" + position + \")\");\r\n\r\n        g.append(\"circle\")\r\n            .attr(\"r\", 10)\r\n            .style(\"fill\", this.props.marker.colour)\r\n            .call(drag);\r\n\r\n        g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [-10, -20] + \")\")\r\n            .text(this.props.marker.name);\r\n\r\n        g.on(\"click\", this.click);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const drag = d3.drag<SVGCircleElement, unknown>().on(\"drag\", this.drag);\r\n        let g = d3.select(this.markerRef.current);\r\n\r\n        g.selectAll(\"text\").remove();\r\n        g.selectAll(\"circle\").remove();\r\n\r\n        g.append(\"circle\")\r\n                .attr(\"r\", 10)\r\n                .style(\"fill\", this.props.marker.colour)\r\n                .call(drag);\r\n\r\n        if (this.props.marker._id === this.props.selectedMarker._id) {\r\n            g.append(\"circle\")\r\n                .attr(\"r\", 12)\r\n                .attr(\"class\", \"selected-marker\")\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke-width\", 2)\r\n        }\r\n\r\n        g.append(\"text\")\r\n            .attr(\"transform\", \"translate(\" + [-10, -20] + \")\")\r\n            .text(this.props.marker.name);\r\n\r\n        const inactive = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Inactive);\r\n        const inactiveIndex = inactive.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n        let position = this.props.marker.currentPos;\r\n\r\n        if (inactiveIndex > -1) {\r\n            position = [110, 70 + (50 * (inactiveIndex ))]\r\n        }\r\n\r\n        const complete = this.props.markers.filter((m: IMarker) => m.status === MarkerStatus.Complete);\r\n        const completeIndex = complete.findIndex((m: IMarker) => m._id === this.props.marker._id);\r\n\r\n        if (completeIndex > -1) {\r\n            position = [1000, 70 + (50 * (completeIndex ))]\r\n        }\r\n\r\n        if (this.props.marker.currentPos.length !== 0) {\r\n            if (this.props.marker.isNewPercentage) {\r\n                position = MarkerHelper.getPointAtPercentage(this.props.line, this.props.marker.percentage);\r\n            }\r\n\r\n            g.attr(\r\n                \"transform\",\r\n                \"translate(\" + position + \")\"\r\n            );\r\n        }\r\n\r\n        this.props.marker.currentPos = position;\r\n        this.props.marker.isNewPercentage = false;\r\n    }\r\n\r\n    render() {\r\n        return <g ref={this.markerRef}></g>;\r\n    }\r\n}\r\n\r\nexport default Marker;\r\n","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst AddIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M14.25 0H2.75C1.23 0 0 1.23 0 2.75v15.5C0 19.77 1.23 21 2.75 21h6.59a8.731 8.731 0 01-.84-3.75c0-1.15.22-2.25.63-3.26-.04.01-.08.01-.13.01H4c-.55 0-1-.45-1-1s.45-1 1-1h5c.38 0 .72.22.88.54A8.827 8.827 0 0112.36 10H4c-.55 0-1-.45-1-1s.45-1 1-1h9c.55 0 1 .45 1 1 0 .05 0 .09-.01.13.93-.38 1.95-.6 3.01-.62V2.75C17 1.23 15.77 0 14.25 0zM8 6H4c-.55 0-1-.45-1-1s.45-1 1-1h4c.55 0 1 .45 1 1s-.45 1-1 1z\"/>\r\n            <path d=\"M17.25 10.5c-3.722 0-6.75 3.028-6.75 6.75S13.528 24 17.25 24 24 20.972 24 17.25s-3.028-6.75-6.75-6.75zM20 18.25h-1.75V20a1 1 0 01-2 0v-1.75H14.5a1 1 0 010-2h1.75V14.5a1 1 0 012 0v1.75H20a1 1 0 010 2z\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default AddIcon;","import { IIconProps } from \"./interfaces/IIconProps\";\r\nimport \"./style/Icon.css\";\r\n\r\nconst EditIcon = (props: IIconProps) => {\r\n    return (\r\n        <svg className={`icon ${props.className}`} fill={props.fill} viewBox=\"0 0 512 511\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M405.332 256.484c-11.797 0-21.332 9.559-21.332 21.332v170.668c0 11.754-9.559 21.332-21.332 21.332H64c-11.777 0-21.332-9.578-21.332-21.332V149.816c0-11.754 9.555-21.332 21.332-21.332h170.668c11.797 0 21.332-9.558 21.332-21.332 0-11.777-9.535-21.336-21.332-21.336H64c-35.285 0-64 28.715-64 64v298.668c0 35.286 28.715 64 64 64h298.668c35.285 0 64-28.714 64-64V277.816c0-11.796-9.54-21.332-21.336-21.332zm0 0\"/>\r\n            <path d=\"M200.02 237.05a10.793 10.793 0 00-2.922 5.438l-15.082 75.438c-.703 3.496.406 7.101 2.922 9.64a10.673 10.673 0 007.554 3.114c.68 0 1.387-.063 2.09-.211l75.414-15.082c2.09-.43 3.988-1.43 5.461-2.926l168.79-168.79-75.415-75.41zm0 0M496.383 16.102c-20.797-20.801-54.633-20.801-75.414 0l-29.524 29.523 75.414 75.414 29.524-29.527C506.453 81.465 512 68.066 512 53.816s-5.547-27.648-15.617-37.714zm0 0\"/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default EditIcon;","import React from \"react\";\r\nimport { IMarkerData } from \"../../util/IMarkerData\";\r\nimport AddIcon from \"../Icons/AddIcon\";\r\nimport DeleteIcon from \"../Icons/DeleteIcon\";\r\nimport EditIcon from \"../Icons/EditIcon\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { IToolbarProps } from \"./interfaces/IToolbarProps\";\r\nimport \"./style/Toolbar.css\";\r\n\r\nclass Toolbar extends React.Component<IToolbarProps> {\r\n    private dropdownContentRef = React.createRef<HTMLDivElement>();\r\n    private dropdownButtonRef = React.createRef<HTMLButtonElement>();\r\n\r\n    edit = (marker: IMarkerData) => {\r\n        this.toggleDropdown();\r\n        this.props.selectMarker(marker);\r\n        this.props.selectModal(\"edit\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"mousedown\",  this.hideDropdown);\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        const state = this.dropdownContentRef.current?.style.display;\r\n        if (state === \"none\") {\r\n            this.dropdownContentRef.current!.style.display = \"flex\";\r\n        } else {\r\n            this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    hideDropdown = (event: MouseEvent) => {\r\n        if (!this.dropdownContentRef.current?.contains(event.target as HTMLDivElement) && \r\n        !this.dropdownContentRef.current?.contains(event.target as HTMLButtonElement)) {\r\n                this.dropdownContentRef.current!.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"mousedown\", this.hideDropdown);\r\n    }\r\n    \r\n    render() {\r\n        const disable = !this.props.markers.some(marker => this.props.selectedMarker !== undefined && marker._id === this.props.selectedMarker._id);\r\n        const empty = this.props.markers.length === 0;\r\n        const style = disable && !empty ? \"dropdown__button disabled\" : \"dropdown__button\" ;\r\n        return (\r\n            <div className=\"toolbar\">\r\n                <button className=\"toolbar__button\" onClick={() => this.props.selectModal(\"add\")}><AddIcon className=\"toolbar__icon\" /> Add</button>\r\n                <div className=\"toolbar__edit\">\r\n                    <button className=\"toolbar__edit-button\"\r\n                            disabled={disable} \r\n                            onClick={() => this.props.selectModal(\"edit\")}>\r\n                        <EditIcon className=\"toolbar__icon\" /><span>Edit</span>\r\n                    </button>\r\n                    <div className=\"dropdown\">\r\n                        <button className={style} \r\n                                disabled={empty}\r\n                                ref={this.dropdownButtonRef}\r\n                                onClick={() => this.toggleDropdown()}>▼</button>\r\n                        <div className=\"dropdown__content\"\r\n                             style={{display: \"none\"}}\r\n                             ref={this.dropdownContentRef}>\r\n                            {this.props.markers.map((marker: IMarker, index) => (\r\n                                <button className=\"dropdown__item\"\r\n                                        onClick={() => this.edit({_id: marker._id, name: marker.name})}\r\n                                        key={index}>\r\n                                    <div style={{backgroundColor: marker.colour}} className=\"dropdown__marker\"></div>{marker.name}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"toolbar__button delete\" \r\n                        disabled={disable}\r\n                        onClick={() => this.props.selectModal(\"delete\")}>\r\n                    <DeleteIcon className=\"toolbar__icon\" /><span>Delete</span>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React, { useState } from \"react\";\r\nimport { Colour } from \"../../util/ColourEnum\";\r\nimport { MarkerStatus } from \"../../util/MarkerStatusEnum\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { INewMarker } from \"../Marker/interfaces/INewMarker\";\r\nimport { IMarkerFormProps } from \"./interfaces/IMarkerFormProps\";\r\nimport \"./style/MarkerForm.css\";\r\n\r\nconst MarkerForm = (props: IMarkerFormProps) => {\r\n    const [name, setName] = useState(props.marker?.name || \"\");\r\n    const [percentage, setPercentage] = useState(props.marker?.percentage || \"50\");\r\n    const [colour, setColour] = useState(props.marker?.colour || Colour.Gray);\r\n    const [status, setStatus] = useState(props.marker?.status || MarkerStatus.Active);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (props.marker?._id) {\r\n            const marker:IMarker = {\r\n                _id: props.marker._id,\r\n                hillId: props.hillId,\r\n                name,\r\n                percentage: parseInt(percentage.toString()),\r\n                isNewPercentage: percentage !== props.marker?.percentage || \r\n                ((props.marker.status === MarkerStatus.Complete || props.marker.status === MarkerStatus.Inactive) && status === MarkerStatus.Active),\r\n                currentPos: props.marker?.currentPos || [],\r\n                colour,\r\n                status,\r\n            };\r\n            props.update(marker);\r\n        } else {\r\n            const marker:INewMarker = {\r\n                hillId: props.hillId,\r\n                name,\r\n                percentage: parseInt(percentage.toString()),\r\n                isNewPercentage: percentage !== props.marker?.percentage || \r\n                ((props.marker.status === MarkerStatus.Complete || props.marker.status === MarkerStatus.Inactive) && status === MarkerStatus.Active),\r\n                currentPos: props.marker?.currentPos || [],\r\n                colour,\r\n                status,\r\n            };\r\n            props.add(marker);\r\n        }\r\n        props.selectModal(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-form__header\">\r\n                <h2 className=\"modal-form__header-title\">{props.title}</h2>\r\n                <button className=\"modal-form__header-close\" onClick={() => props.selectModal(\"\")}>x</button>\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"modal-form__content\">\r\n                <label className=\"modal-form__label\">Marker name: </label>\r\n                <input type=\"text\"\r\n                        className=\"modal-form__input\"\r\n                        required \r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)} />\r\n                <label className=\"modal-form__label\">Marker percentage: </label>\r\n                <input type=\"text\"\r\n                        className=\"modal-form__input\"\r\n                        required\r\n                        value={percentage}\r\n                        onChange={(e) => setPercentage(e.target.value)} />\r\n                <label className=\"modal-form__label\">Marker colour: </label>\r\n                <select className=\"modal-form__input\"\r\n                        required\r\n                        value={colour}\r\n                        onChange={(e) => setColour(e.target.value)}>\r\n                        {(Object.keys(Colour) as Array<keyof typeof Colour>).map((key) => {\r\n                            return <option value={Colour[key]} style={{color: Colour[key]}}>{key}</option>;\r\n                        })}\r\n                </select>\r\n                <label className=\"modal-form__label\">Marker status: </label>\r\n                <select className=\"modal-form__input\"\r\n                        required\r\n                        value={status}\r\n                        onChange={(e) => setStatus(e.target.value)}>\r\n                        {(Object.keys(MarkerStatus) as Array<keyof typeof MarkerStatus>).map((key) => {\r\n                            return <option value={MarkerStatus[key]}>{key}</option>;\r\n                        })}\r\n                </select>\r\n                <div className=\"modal-form__content-buttons\">\r\n                    <button className=\"modal-form__button\" onClick={() => props.selectModal(\"\")}>Cancel</button>\r\n                    <button className=\"modal-form__button save\" type=\"submit\">Save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MarkerForm;\r\n","import React from \"react\";\r\nimport MarkerForm from \"../MarkerForm/MarkerForm\";\r\nimport { IModalProps } from \"./interfaces/IModalProps\";\r\nimport \"./style/Modal.css\";\r\n\r\nclass Modal extends React.Component<IModalProps> {\r\n    render() {\r\n        switch(this.props.modal) {\r\n            case \"add\":\r\n                return (\r\n                    <div className=\"modal\">\r\n                        <div className=\"modal__card\">\r\n                        <MarkerForm title=\"Add Marker\" \r\n                                    hillId={this.props.hillId}\r\n                                    add={this.props.add} \r\n                                    update={this.props.update}\r\n                                    selectModal={this.props.selectModal} />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case \"edit\":\r\n                return (\r\n                    <div className=\"modal\">\r\n                        <div className=\"modal__card\">\r\n                            <MarkerForm title=\"Edit Marker\"\r\n                                        hillId={this.props.hillId}\r\n                                        add={this.props.add}\r\n                                        update={this.props.update} \r\n                                        marker={this.props.marker}\r\n                                        selectModal={this.props.selectModal} />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case \"delete\":\r\n                return (\r\n                    <div className=\"modal\">\r\n                        <div className=\"modal__card\">\r\n                            <div className=\"modal-form__header\">\r\n                                <h2 className=\"modal-form__header-title\">Delete Marker</h2>\r\n                                <button className=\"modal-form__header-close\" onClick={() => this.props.selectModal(\"\")}>x</button>\r\n                            </div>\r\n                            <div className=\"modal-form__content\">\r\n                                <p className=\"modal-form__text\" >Are you sure you want to delete '{this.props.marker!.name}'?</p>\r\n                                <div className=\"modal-form__content-buttons\">\r\n                                    <button className=\"modal-form__button\" onClick={() => this.props.selectModal(\"\")}>Cancel</button>\r\n                                    <button className=\"modal-form__button delete\" \r\n                                        onClick={() => {\r\n                                            this.props.delete(this.props.marker!._id);\r\n                                            this.props.selectModal(\"\");\r\n                                        }}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return <></>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import { IHill } from \"../components/Hill/interfaces/IHill\";\r\n\r\nexport const hillPlaceholder: IHill = {\r\n    _id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    author: \"\",\r\n    createdAt: 0,\r\n    updatedAt: 0\r\n}","import React from \"react\";\r\nimport Marker from \"../Marker/Marker\";\r\nimport Toolbar from \"../Toolbar/Toolbar\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { IHillProps } from \"./interfaces/IHillProps\";\r\nimport { IHillState } from \"./interfaces/IHillState\";\r\nimport { IMarker } from \"../Marker/interfaces/IMarker\";\r\nimport { hillPlaceholder } from \"../../util/hillPlaceholder\";\r\nimport { IMarkerData } from \"../../util/IMarkerData\";\r\nimport { createMarker, deleteMarker, fetchHill, fetchHillMarkers, debounceUpdateMarker } from \"../../api\";\r\nimport { INewMarker } from \"../Marker/interfaces/INewMarker\";\r\nimport * as d3 from \"d3\";\r\nimport \"./style/Hill.css\";\r\n\r\nclass Hill extends React.Component<IHillProps, IHillState> {\r\n    state = {\r\n        svg: null,\r\n        line: null,\r\n        hill: hillPlaceholder,\r\n        markers: [],\r\n        activeModal: \"\",\r\n        selectedMarker: {_id: \"\", name:\"\"},\r\n        isMarkerClick: false\r\n    };\r\n\r\n    update = () => this.props.socket.emit(\"update-hill-markers\", ({room: this.props.id, markers: this.state.markers}));\r\n\r\n    componentDidMount() {\r\n        this.props.socket.emit(\"hill-connect\", this.props.id);\r\n        this.props.socket.on(\"update-hill-markers\", data => this.setState({ markers: data}));\r\n        const line = d3.line().curve(d3.curveCatmullRom);\r\n        const svg: any = d3.select(\"#hill__svg\");\r\n        svg.on(\"click\", this.deselectMarker);\r\n        const path = svg\r\n            .append(\"path\")\r\n            .datum(this.props.points)\r\n            .attr(\"d\", line)\r\n            .attr(\"id\", \"hill__path\");\r\n\r\n        svg.append(\"path\")\r\n            .datum([[600, 400],[600, 120]])\r\n            .attr(\"d\", d3.line())\r\n            .attr(\"class\", \"hill__line\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [100, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Inactive\");\r\n\r\n        svg.append(\"text\")\r\n        .attr(\"transform\", \"translate(\" + [990, 20] + \")\")\r\n        .attr(\"class\", \"hill__text\")\r\n        .text(\"Complete\");\r\n        \r\n        this.setState({ svg: svg.node(), line: path.node() });\r\n        fetchHill(this.props.id).then(res => this.setState({ hill: res.data }));\r\n        fetchHillMarkers(this.props.id).then(res => this.setState({ markers: res.data }));\r\n    }\r\n\r\n    deselectMarker = () => {\r\n        if (!this.state.isMarkerClick) {\r\n            this.setState({selectedMarker: {_id: \"\", name: \"\"}});\r\n        }\r\n        this.setState({isMarkerClick: false});\r\n    }\r\n\r\n    selectMarker = (marker: IMarkerData) => {\r\n        this.setState({isMarkerClick: true, selectedMarker: marker});\r\n    }\r\n    \r\n    addMarker = (marker: INewMarker) => {\r\n        createMarker(marker)\r\n            .then((res) => {\r\n                this.setState({markers: [...this.state.markers, res.data]}, () => {\r\n                    this.update();\r\n                });\r\n            });\r\n    }\r\n\r\n    updateMarker = (marker: IMarker) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === marker._id);\r\n        newMarkers[index] = marker;\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            debounceUpdateMarker(marker._id, marker)\r\n        });\r\n    }\r\n        \r\n    deleteMarker = (id: string) => {\r\n        let newMarkers: IMarker[] = [...this.state.markers];\r\n        const index = newMarkers.findIndex(m => m._id === id);\r\n        newMarkers.splice(index, 1);\r\n        this.setState({markers: newMarkers}, () => {\r\n            this.update();\r\n            deleteMarker(id);\r\n        });\r\n    }\r\n\r\n    selectModal = (modal: string) => {\r\n        this.setState({activeModal: modal});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"hill\">\r\n                <h1 className=\"hill__title\">{this.state.hill.name}</h1>\r\n                <p className=\"hill__subtitle\">{this.state.hill.description}</p>\r\n                <svg id=\"hill__svg\"\r\n                    width={this.props.size.width}\r\n                    height={this.props.size.height}>\r\n                    {this.state.markers.map((marker: IMarker) => (\r\n                        <Marker svg={this.state.svg}\r\n                                line={this.state.line}\r\n                                marker={marker}\r\n                                markers={this.state.markers}\r\n                                selectedMarker={this.state.selectedMarker}\r\n                                selectMarker={this.selectMarker}\r\n                                updateMarker={this.updateMarker}\r\n                                key={marker._id} />\r\n                    ))}\r\n                </svg>\r\n                <Toolbar markers={this.state.markers} \r\n                         selectedMarker={this.state.selectedMarker}\r\n                         selectMarker={this.selectMarker}\r\n                         selectModal={this.selectModal} />\r\n                <Modal modal={this.state.activeModal}\r\n                    hillId={this.props.id}\r\n                    add={this.addMarker}\r\n                    update={this.updateMarker}\r\n                    delete={this.deleteMarker}\r\n                    marker={this.state.markers.find((m: IMarker) => m._id === this.state.selectedMarker._id)}\r\n                    selectModal={this.selectModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hill;\r\n","import Home from \"./pages/Home/Home\";\nimport Create from \"./pages/Create/Create\";\nimport Edit from \"./pages/Edit/Edit\";\nimport Navbar from './components/Navbar/Navbar';\nimport Hill from './components/Hill/Hill';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport { io } from 'socket.io-client';\n// import Footer from './components/Footer/Footer';\n\nconst socket = io(\"/\");\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar />\n                <Switch>\n                    <div className=\"container\">\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route path=\"/edit/:id\">\n                            <Edit />\n                        </Route>\n                        <Route path=\"/create\">\n                            <Create />\n                        </Route>\n                        <Route path=\"/hill/:id\" render={(props) => (\n                            <Hill size={{width: 1200, height: 450}} points={[[100,400],[300,350],[600,120],[900,350],[1100,400]]} id={props.match.params.id} socket={socket} />\n                        )} />\n                    </div>\n                </Switch>\n                {/* <Footer /> */}\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}